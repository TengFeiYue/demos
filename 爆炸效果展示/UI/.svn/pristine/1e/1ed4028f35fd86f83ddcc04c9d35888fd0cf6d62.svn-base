"use strict";

/* 
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message 
 * Digest Algorithm, as defined in RFC 1321. 
 * Version 1.1 Copyright (C) Paul Johnston 1999 - 2002. 
 * Code also contributed by Greg Holt 
 * See http://pajhome.org.uk/site/legal.html for details. 
 */

/* 
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally 
 * to work around bugs in some JS interpreters. 
 */
function safe_add(x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xFFFF;
}

/* 
 * Bitwise rotate a 32-bit number to the left. 
 */
function rol(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}

/* 
 * These functions implement the four basic operations the algorithm uses. 
 */
function cmn(q, a, b, x, s, t) {
  return safe_add(rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
}
function ff(a, b, c, d, x, s, t) {
  return cmn(b & c | ~b & d, a, b, x, s, t);
}
function gg(a, b, c, d, x, s, t) {
  return cmn(b & d | c & ~d, a, b, x, s, t);
}
function hh(a, b, c, d, x, s, t) {
  return cmn(b ^ c ^ d, a, b, x, s, t);
}
function ii(a, b, c, d, x, s, t) {
  return cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* 
 * Calculate the MD5 of an array of little-endian words, producing an array 
 * of little-endian words. 
 */
function coreMD5(x) {
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = ff(a, b, c, d, x[i + 0], 7, -680876936);
    d = ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = ff(c, d, a, b, x[i + 10], 17, -42063);
    b = ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = ff(b, c, d, a, x[i + 15], 22, 1236535329);

    a = gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = gg(b, c, d, a, x[i + 0], 20, -373897302);
    a = gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = gg(b, c, d, a, x[i + 12], 20, -1926607734);

    a = hh(a, b, c, d, x[i + 5], 4, -378558);
    d = hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = hh(d, a, b, c, x[i + 0], 11, -358537222);
    c = hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = hh(b, c, d, a, x[i + 2], 23, -995338651);

    a = ii(a, b, c, d, x[i + 0], 6, -198630844);
    d = ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = ii(b, c, d, a, x[i + 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return [a, b, c, d];
}

/* 
 * Convert an array of little-endian words to a hex string. 
 */
function binl2hex(binarray) {
  var hex_tab = "0123456789abcdef";
  var str = "";
  for (var i = 0; i < binarray.length * 4; i++) {
    str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);
  }
  return str;
}

/* 
 * Convert an array of little-endian words to a base64 encoded string. 
 */
function binl2b64(binarray) {
  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var str = "";
  for (var i = 0; i < binarray.length * 32; i += 6) {
    str += tab.charAt(binarray[i >> 5] << i % 32 & 0x3F | binarray[i >> 5 + 1] >> 32 - i % 32 & 0x3F);
  }
  return str;
}

/* 
 * Convert an 8-bit character string to a sequence of 16-word blocks, stored 
 * as an array, and append appropriate padding for MD4/5 calculation. 
 * If any of the characters are >255, the high byte is silently ignored. 
 */
function str2binl(str) {
  var nblk = (str.length + 8 >> 6) + 1; // number of 16-word blocks   
  var blks = new Array(nblk * 16);
  for (var i = 0; i < nblk * 16; i++) {
    blks[i] = 0;
  }for (var i = 0; i < str.length; i++) {
    blks[i >> 2] |= (str.charCodeAt(i) & 0xFF) << i % 4 * 8;
  }blks[i >> 2] |= 0x80 << i % 4 * 8;
  blks[nblk * 16 - 2] = str.length * 8;
  return blks;
}

/* 
 * Convert a wide-character string to a sequence of 16-word blocks, stored as 
 * an array, and append appropriate padding for MD4/5 calculation. 
 */
function strw2binl(str) {
  var nblk = (str.length + 4 >> 5) + 1; // number of 16-word blocks   
  var blks = new Array(nblk * 16);
  for (var i = 0; i < nblk * 16; i++) {
    blks[i] = 0;
  }for (var i = 0; i < str.length; i++) {
    blks[i >> 1] |= str.charCodeAt(i) << i % 2 * 16;
  }blks[i >> 1] |= 0x80 << i % 2 * 16;
  blks[nblk * 16 - 2] = str.length * 16;
  return blks;
}

/* 
 * External interface 
 */
function hexMD5(str) {
  return binl2hex(coreMD5(str2binl(str)));
}
function hexMD5w(str) {
  return binl2hex(coreMD5(strw2binl(str)));
}
function b64MD5(str) {
  return binl2b64(coreMD5(str2binl(str)));
}
function b64MD5w(str) {
  return binl2b64(coreMD5(strw2binl(str)));
}
/* Backward compatibility */
function calcMD5(str) {
  return binl2hex(coreMD5(str2binl(str)));
}
module.exports = {
  hexMD5: hexMD5
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1kNS5qcyJdLCJuYW1lcyI6WyJzYWZlX2FkZCIsIngiLCJ5IiwibHN3IiwibXN3Iiwicm9sIiwibnVtIiwiY250IiwiY21uIiwicSIsImEiLCJiIiwicyIsInQiLCJmZiIsImMiLCJkIiwiZ2ciLCJoaCIsImlpIiwiY29yZU1ENSIsImkiLCJsZW5ndGgiLCJvbGRhIiwib2xkYiIsIm9sZGMiLCJvbGRkIiwiYmlubDJoZXgiLCJiaW5hcnJheSIsImhleF90YWIiLCJzdHIiLCJjaGFyQXQiLCJiaW5sMmI2NCIsInRhYiIsInN0cjJiaW5sIiwibmJsayIsImJsa3MiLCJBcnJheSIsImNoYXJDb2RlQXQiLCJzdHJ3MmJpbmwiLCJoZXhNRDUiLCJoZXhNRDV3IiwiYjY0TUQ1IiwiYjY0TUQ1dyIsImNhbGNNRDUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7OztBQVFBOzs7O0FBSUEsU0FBU0EsUUFBVCxDQUFrQkMsQ0FBbEIsRUFBcUJDLENBQXJCLEVBQ0E7QUFDRSxNQUFJQyxNQUFNLENBQUNGLElBQUksTUFBTCxLQUFnQkMsSUFBSSxNQUFwQixDQUFWO0FBQ0EsTUFBSUUsTUFBTSxDQUFDSCxLQUFLLEVBQU4sS0FBYUMsS0FBSyxFQUFsQixLQUF5QkMsT0FBTyxFQUFoQyxDQUFWO0FBQ0EsU0FBUUMsT0FBTyxFQUFSLEdBQWVELE1BQU0sTUFBNUI7QUFDRDs7QUFFRDs7O0FBR0EsU0FBU0UsR0FBVCxDQUFhQyxHQUFiLEVBQWtCQyxHQUFsQixFQUNBO0FBQ0UsU0FBUUQsT0FBT0MsR0FBUixHQUFnQkQsUUFBUyxLQUFLQyxHQUFyQztBQUNEOztBQUVEOzs7QUFHQSxTQUFTQyxHQUFULENBQWFDLENBQWIsRUFBZ0JDLENBQWhCLEVBQW1CQyxDQUFuQixFQUFzQlYsQ0FBdEIsRUFBeUJXLENBQXpCLEVBQTRCQyxDQUE1QixFQUNBO0FBQ0UsU0FBT2IsU0FBU0ssSUFBSUwsU0FBU0EsU0FBU1UsQ0FBVCxFQUFZRCxDQUFaLENB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LFNBQU9jLElBQVA7QUFDRDs7QUFFRDs7O0FBR0EsU0FBU0ksTUFBVCxDQUFpQlYsR0FBakIsRUFBc0I7QUFBRSxTQUFPSCxTQUFTUCxRQUFTYyxTQUFTSixHQUFULENBQVQsQ0FBVCxDQUFQO0FBQTBDO0FBQ2xFLFNBQVNXLE9BQVQsQ0FBaUJYLEdBQWpCLEVBQXNCO0FBQUUsU0FBT0gsU0FBU1AsUUFBUW1CLFVBQVVULEdBQVYsQ0FBUixDQUFULENBQVA7QUFBMEM7QUFDbEUsU0FBU1ksTUFBVCxDQUFpQlosR0FBakIsRUFBc0I7QUFBRSxTQUFPRSxTQUFTWixRQUFTYyxTQUFTSixHQUFULENBQVQsQ0FBVCxDQUFQO0FBQTBDO0FBQ2xFLFNBQVNhLE9BQVQsQ0FBaUJiLEdBQWpCLEVBQXNCO0FBQUUsU0FBT0UsU0FBU1osUUFBUW1CLFVBQVVULEdBQVYsQ0FBUixDQUFULENBQVA7QUFBMEM7QUFDbEU7QUFDQSxTQUFTYyxPQUFULENBQWlCZCxHQUFqQixFQUFzQjtBQUFFLFNBQU9ILFNBQVNQLFFBQVNjLFNBQVNKLEdBQVQsQ0FBVCxDQUFULENBQVA7QUFBMEM7QUFDbEVlLE9BQU9DLE9BQVAsR0FBaUI7QUFDZk4sVUFBUUE7QUFETyxDQUFqQiIsImZpbGUiOiJtZDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBcclxuICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBSU0EgRGF0YSBTZWN1cml0eSwgSW5jLiBNRDUgTWVzc2FnZSBcclxuICogRGlnZXN0IEFsZ29yaXRobSwgYXMgZGVmaW5lZCBpbiBSRkMgMTMyMS4gXHJcbiAqIFZlcnNpb24gMS4xIENvcHlyaWdodCAoQykgUGF1bCBKb2huc3RvbiAxOTk5IC0gMjAwMi4gXHJcbiAqIENvZGUgYWxzbyBjb250cmlidXRlZCBieSBHcmVnIEhvbHQgXHJcbiAqIFNlZSBodHRwOi8vcGFqaG9tZS5vcmcudWsvc2l0ZS9sZWdhbC5odG1sIGZvciBkZXRhaWxzLiBcclxuICovICBcclxuICBcclxuLyogXHJcbiAqIEFkZCBpbnRlZ2Vycywgd3JhcHBpbmcgYXQgMl4zMi4gVGhpcyB1c2VzIDE2LWJpdCBvcGVyYXRpb25zIGludGVybmFsbHkgXHJcbiAqIHRvIHdvcmsgYXJvdW5kIGJ1Z3MgaW4gc29tZSBKUyBpbnRlcnByZXRlcnMuIFxyXG4gKi8gIFxyXG5mdW5jdGlvbiBzYWZlX2FkZCh4LCB5KSAgXHJcbnsgIFxyXG4gIHZhciBsc3cgPSAoeCAmIDB4RkZGRikgKyAoeSAmIDB4RkZGRikgIFxyXG4gIHZhciBtc3cgPSAoeCA+PiAxNikgKyAoeSA+PiAxNikgKyAobHN3ID4+IDE2KSAgXHJcbiAgcmV0dXJuIChtc3cgPDwgMTYpIHwgKGxzdyAmIDB4RkZGRikgIFxyXG59ICBcclxuICBcclxuLyogXHJcbiAqIEJpdHdpc2Ugcm90YXRlIGEgMzItYml0IG51bWJlciB0byB0aGUgbGVmdC4gXHJcbiAqLyAgXHJcbmZ1bmN0aW9uIHJvbChudW0sIGNudCkgIFxyXG57ICBcclxuICByZXR1cm4gKG51bSA8PCBjbnQpIHwgKG51bSA+Pj4gKDMyIC0gY250KSkgIFxyXG59ICBcclxuICBcclxuLyogXHJcbiAqIFRoZXNlIGZ1bmN0aW9ucyBpbXBsZW1lbnQgdGhlIGZvdXIgYmFzaWMgb3BlcmF0aW9ucyB0aGUgYWxnb3JpdGhtIHVzZXMuIFxyXG4gKi8gIFxyXG5mdW5jdGlvbiBjbW4ocSwgYSwgYiwgeCwgcywgdCkgIFxyXG57ICBcclxuICByZXR1cm4gc2FmZV9hZGQocm9sKHNhZmVfYWRkKHNhZmVfYWRkKGEsIHEpLCBzYWZlX2FkZCh4LCB0KSksIHMpLCBiKSAgXHJcbn0gIFxyXG5mdW5jdGlvbiBmZihhLCBiLCBjLCBkLCB4LCBzLCB0KSAgXHJcbnsgIFxyXG4gIHJldHVybiBjbW4oKGIgJiBjKSB8ICgofmIpICYgZCksIGEsIGIsIHgsIHMsIHQpICBcclxufSAgXHJcbmZ1bmN0aW9uIGdnKGEsIGIsIGMsIGQsIHgsIHMsIHQpICBcclxueyAgXHJcbiAgcmV0dXJuIGNtbigoYiAmIGQpIHwgKGMgJiAofmQpKSwgYSwgYiwgeCwgcywgdCkgIFxyXG59ICBcclxuZnVuY3Rpb24gaGgoYSwgYiwgYywgZCwgeCwgcywgdCkgIFxyXG57ICBcclxuICByZXR1cm4gY21uKGIgXiBjIF4gZCwgYSwgYiwgeCwgcywgdCkgIFxyXG59ICBcclxuZnVuY3Rpb24gaWkoYSwgYiwgYywgZCwgeCwgcywgdCkgIFxyXG57ICBcclxuICByZXR1cm4gY21uKGMgXiAoYiB8ICh+ZCkpLCBhLCBiLCB4LCBzLCB0KSAgXHJcbn0gIFxyXG4gIFxyXG4vKiBcclxuICogQ2FsY3VsYXRlIHRoZSBNRDUgb2YgYW4gYXJyYXkgb2YgbGl0dGxlLWVuZGlhbiB3b3JkcywgcHJvZHVjaW5nIGFuIGFycmF5IFxyXG4gKiBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzLiBcclxuICovICBcclxuZnVuY3Rpb24gY29yZU1ENSh4KSAgXHJcbnsgIFxyXG4gIHZhciBhID0gIDE3MzI1ODQxOTMgIFxyXG4gIHZhciBiID0gLTI3MTczMzg3OSAgXHJcbiAgdmFyIGMgPSAtMTczMjU4NDE5NCAgXHJcbiAgdmFyIGQgPSAgMjcxNzMzODc4ICBcclxuICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkgKz0gMTYpICBcclxuICB7ICBcclxuICAgIHZhciBvbGRhID0gYSAgXHJcbiAgICB2YXIgb2xkYiA9IGIgIFxyXG4gICAgdmFyIG9sZGMgPSBjICBcclxuICAgIHZhciBvbGRkID0gZCAgXHJcbiAgXHJcbiAgICBhID0gZmYoYSwgYiwgYywgZCwgeFtpKyAwXSwgNyAsIC02ODA4NzY5MzYpICBcclxuICAgIGQgPSBmZihkLCBhLCBiLCBjLCB4W2krIDFdLCAxMiwgLTM4OTU2NDU4NikgIFxyXG4gICAgYyA9IGZmKGMsIGQsIGEsIGIsIHhbaSsgMl0sIDE3LCAgNjA2MTA1ODE5KSAgXHJcbiAgICBiID0gZmYoYiwgYywgZCwgYSwgeFtpKyAzXSwgMjIsIC0xMDQ0NTI1MzMwKSAgXHJcbiAgICBhID0gZmYoYSwgYiwgYywgZCwgeFtpKyA0XSwgNyAsIC0xNzY0MTg4OTcpICBcclxuICAgIGQgPSBmZihkLCBhLCBiLCBjLCB4W2krIDVdLCAxMiwgIDEyMDAwODA0MjYpICBcclxuICAgIGMgPSBmZihjLCBkLCBhLCBiLCB4W2krIDZdLCAxNywgLTE0NzMyMzEzNDEpICBcclxuICAgIGIgPSBmZihiLCBjLCBkLCBhLCB4W2krIDddLCAyMiwgLTQ1NzA1OTgzKSAgXHJcbiAgICBhID0gZmYoYSwgYiwgYywgZCwgeFtpKyA4XSwgNyAsICAxNzcwMDM1NDE2KSAgXHJcbiAgICBkID0gZmYoZCwgYSwgYiwgYywgeFtpKyA5XSwgMTIsIC0xOTU4NDE0NDE3KSAgXHJcbiAgICBjID0gZmYoYywgZCwgYSwgYiwgeFtpKzEwXSwgMTcsIC00MjA2MykgIFxyXG4gICAgYiA9IGZmKGIsIGMsIGQsIGEsIHhbaSsxMV0sIDIyLCAtMTk5MDQwNDE2MikgIFxyXG4gICAgYSA9IGZmKGEsIGIsIGMsIGQsIHhbaSsxMl0sIDcgLCAgMTgwNDYwMzY4MikgIFxyXG4gICAgZCA9IGZmKGQsIGEsIGIsIGMsIHhbaSsxM10sIDEyLCAtNDAzNDExMDEpICBcclxuICAgIGMgPSBmZihjLCBkLCBhLCBiLCB4W2krMTRdLCAxNywgLTE1MDIwMDIyOTApICBcclxuICAgIGIgPSBmZihiLCBjLCBkLCBhLCB4W2krMTVdLCAyMiwgIDEyMzY1MzUzMjkpICBcclxuICBcclxuICAgIGEgPSBnZyhhLCBiLCBjLCBkLCB4W2krIDFdLCA1ICwgLTE2NTc5NjUxMCkgIFxyXG4gICAgZCA9IGdnKGQsIGEsIGIsIGMsIHhbaSsgNl0sIDkgLCAtMTA2OTUwMTYzMikgIFxyXG4gICAgYyA9IGdnKGMsIGQsIGEsIGIsIHhbaSsxMV0sIDE0LCAgNjQzNzE3NzEzKSAgXHJcbiAgICBiID0gZ2coYiwgYywgZCwgYSwgeFtpKyAwXSwgMjAsIC0zNzM4OTczMDIpICBcclxuICAgIGEgPSBnZyhhLCBiLCBjLCBkLCB4W2krIDVdLCA1ICwgLTcwMTU1ODY5MSkgIFxyXG4gICAgZCA9IGdnKGQsIGEsIGIsIGMsIHhbaSsxMF0sIDkgLCAgMzgwMTYwODMpICBcclxuICAgIGMgPSBnZyhjLCBkLCBhLCBiLCB4W2krMTVdLCAxNCwgLTY2MDQ3ODMzNSkgIFxyXG4gICAgYiA9IGdnKGIsIGMsIGQsIGEsIHhbaSsgNF0sIDIwLCAtNDA1NTM3ODQ4KSAgXHJcbiAgICBhID0gZ2coYSwgYiwgYywgZCwgeFtpKyA5XSwgNSAsICA1Njg0NDY0MzgpICBcclxuICAgIGQgPSBnZyhkLCBhLCBiLCBjLCB4W2krMTRdLCA5ICwgLTEwMTk4MDM2OTApICBcclxuICAgIGMgPSBnZyhjLCBkLCBhLCBiLCB4W2krIDNdLCAxNCwgLTE4NzM2Mzk2MSkgIFxyXG4gICAgYiA9IGdnKGIsIGMsIGQsIGEsIHhbaSsgOF0sIDIwLCAgMTE2MzUzMTUwMSkgIFxyXG4gICAgYSA9IGdnKGEsIGIsIGMsIGQsIHhbaSsxM10sIDUgLCAtMTQ0NDY4MTQ2NykgIFxyXG4gICAgZCA9IGdnKGQsIGEsIGIsIGMsIHhbaSsgMl0sIDkgLCAtNTE0MDM3ODQpICBcclxuICAgIGMgPSBnZyhjLCBkLCBhLCBiLCB4W2krIDddLCAxNCwgIDE3MzUzMjg0NzMpICBcclxuICAgIGIgPSBnZyhiLCBjLCBkLCBhLCB4W2krMTJdLCAyMCwgLTE5MjY2MDc3MzQpICBcclxuICBcclxuICAgIGEgPSBoaChhLCBiLCBjLCBkLCB4W2krIDVdLCA0ICwgLTM3ODU1OCkgIFxyXG4gICAgZCA9IGhoKGQsIGEsIGIsIGMsIHhbaSsgOF0sIDExLCAtMjAyMjU3NDQ2MykgIFxyXG4gICAgYyA9IGhoKGMsIGQsIGEsIGIsIHhbaSsxMV0sIDE2LCAgMTgzOTAzMDU2MikgIFxyXG4gICAgYiA9IGhoKGIsIGMsIGQsIGEsIHhbaSsxNF0sIDIzLCAtMzUzMDk1NTYpICBcclxuICAgIGEgPSBoaChhLCBiLCBjLCBkLCB4W2krIDFdLCA0ICwgLTE1MzA5OTIwNjApICBcclxuICAgIGQgPSBoaChkLCBhLCBiLCBjLCB4W2krIDRdLCAxMSwgIDEyNzI4OTMzNTMpICBcclxuICAgIGMgPSBoaChjLCBkLCBhLCBiLCB4W2krIDddLCAxNiwgLTE1NTQ5NzYzMikgIFxyXG4gICAgYiA9IGhoKGIsIGMsIGQsIGEsIHhbaSsxMF0sIDIzLCAtMTA5NDczMDY0MCkgIFxyXG4gICAgYSA9IGhoKGEsIGIsIGMsIGQsIHhbaSsxM10sIDQgLCAgNjgxMjc5MTc0KSAgXHJcbiAgICBkID0gaGgoZCwgYSwgYiwgYywgeFtpKyAwXSwgMTEsIC0zNTg1MzcyMjIpICBcclxuICAgIGMgPSBoaChjLCBkLCBhLCBiLCB4W2krIDNdLCAxNiwgLTcyMjUyMTk3OSkgIFxyXG4gICAgYiA9IGhoKGIsIGMsIGQsIGEsIHhbaSsgNl0sIDIzLCAgNzYwMjkxODkpICBcclxuICAgIGEgPSBoaChhLCBiLCBjLCBkLCB4W2krIDldLCA0ICwgLTY0MDM2NDQ4NykgIFxyXG4gICAgZCA9IGhoKGQsIGEsIGIsIGMsIHhbaSsxMl0sIDExLCAtNDIxODE1ODM1KSAgXHJcbiAgICBjID0gaGgoYywgZCwgYSwgYiwgeFtpKzE1XSwgMTYsICA1MzA3NDI1MjApICBcclxuICAgIGIgPSBoaChiLCBjLCBkLCBhLCB4W2krIDJdLCAyMywgLTk5NTMzODY1MSkgIFxyXG4gIFxyXG4gICAgYSA9IGlpKGEsIGIsIGMsIGQsIHhbaSsgMF0sIDYgLCAtMTk4NjMwODQ0KSAgXHJcbiAgICBkID0gaWkoZCwgYSwgYiwgYywgeFtpKyA3XSwgMTAsICAxMTI2ODkxNDE1KSAgXHJcbiAgICBjID0gaWkoYywgZCwgYSwgYiwgeFtpKzE0XSwgMTUsIC0xNDE2MzU0OTA1KSAgXHJcbiAgICBiID0gaWkoYiwgYywgZCwgYSwgeFtpKyA1XSwgMjEsIC01NzQzNDA1NSkgIFxyXG4gICAgYSA9IGlpKGEsIGIsIGMsIGQsIHhbaSsxMl0sIDYgLCAgMTcwMDQ4NTU3MSkgIFxyXG4gICAgZCA9IGlpKGQsIGEsIGIsIGMsIHhbaSsgM10sIDEwLCAtMTg5NDk4NjYwNikgIFxyXG4gICAgYyA9IGlpKGMsIGQsIGEsIGIsIHhbaSsxMF0sIDE1LCAtMTA1MTUyMykgIFxyXG4gICAgYiA9IGlpKGIsIGMsIGQsIGEsIHhbaSsgMV0sIDIxLCAtMjA1NDkyMjc5OSkgIFxyXG4gICAgYSA9IGlpKGEsIGIsIGMsIGQsIHhbaSsgOF0sIDYgLCAgMTg3MzMxMzM1OSkgIFxyXG4gICAgZCA9IGlpKGQsIGEsIGIsIGMsIHhbaSsxNV0sIDEwLCAtMzA2MTE3NDQpICBcclxuICAgIGMgPSBpaShjLCBkLCBhLCBiLCB4W2krIDZdLCAxNSwgLTE1NjAxOTgzODApICBcclxuICAgIGIgPSBpaShiLCBjLCBkLCBhLCB4W2krMTNdLCAyMSwgIDEzMDkxNTE2NDkpICBcclxuICAgIGEgPSBpaShhLCBiLCBjLCBkLCB4W2krIDRdLCA2ICwgLTE0NTUyMzA3MCkgIFxyXG4gICAgZCA9IGlpKGQsIGEsIGIsIGMsIHhbaSsxMV0sIDEwLCAtMTEyMDIxMDM3OSkgIFxyXG4gICAgYyA9IGlpKGMsIGQsIGEsIGIsIHhbaSsgMl0sIDE1LCAgNzE4Nzg3MjU5KSAgXHJcbiAgICBiID0gaWkoYiwgYywgZCwgYSwgeFtpKyA5XSwgMjEsIC0zNDM0ODU1NTEpICBcclxuICBcclxuICAgIGEgPSBzYWZlX2FkZChhLCBvbGRhKSAgXHJcbiAgICBiID0gc2FmZV9hZGQoYiwgb2xkYikgIFxyXG4gICAgYyA9IHNhZmVfYWRkKGMsIG9sZGMpICBcclxuICAgIGQgPSBzYWZlX2FkZChkLCBvbGRkKSAgXHJcbiAgfSAgXHJcbiAgcmV0dXJuIFthLCBiLCBjLCBkXSAgXHJcbn0gIFxyXG4gIFxyXG4vKiBcclxuICogQ29udmVydCBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzIHRvIGEgaGV4IHN0cmluZy4gXHJcbiAqLyAgXHJcbmZ1bmN0aW9uIGJpbmwyaGV4KGJpbmFycmF5KSAgXHJcbnsgIFxyXG4gIHZhciBoZXhfdGFiID0gXCIwMTIzNDU2Nzg5YWJjZGVmXCIgIFxyXG4gIHZhciBzdHIgPSBcIlwiICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgYmluYXJyYXkubGVuZ3RoICogNDsgaSsrKSAgXHJcbiAgeyAgXHJcbiAgICBzdHIgKz0gaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoaSU0KSo4KzQpKSAmIDB4RikgKyAgXHJcbiAgICAgICAgICAgaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoaSU0KSo4KSkgJiAweEYpICBcclxuICB9ICBcclxuICByZXR1cm4gc3RyICBcclxufSAgXHJcbiAgXHJcbi8qIFxyXG4gKiBDb252ZXJ0IGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHMgdG8gYSBiYXNlNjQgZW5jb2RlZCBzdHJpbmcuIFxyXG4gKi8gIFxyXG5mdW5jdGlvbiBiaW5sMmI2NChiaW5hcnJheSkgIFxyXG57ICBcclxuICB2YXIgdGFiID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIgIFxyXG4gIHZhciBzdHIgPSBcIlwiICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgYmluYXJyYXkubGVuZ3RoICogMzI7IGkgKz0gNikgIFxyXG4gIHsgIFxyXG4gICAgc3RyICs9IHRhYi5jaGFyQXQoKChiaW5hcnJheVtpPj41XSA8PCAoaSUzMikpICYgMHgzRikgfCAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAoKGJpbmFycmF5W2k+PjUrMV0gPj4gKDMyLWklMzIpKSAmIDB4M0YpKSAgXHJcbiAgfSAgXHJcbiAgcmV0dXJuIHN0ciAgXHJcbn0gIFxyXG4gIFxyXG4vKiBcclxuICogQ29udmVydCBhbiA4LWJpdCBjaGFyYWN0ZXIgc3RyaW5nIHRvIGEgc2VxdWVuY2Ugb2YgMTYtd29yZCBibG9ja3MsIHN0b3JlZCBcclxuICogYXMgYW4gYXJyYXksIGFuZCBhcHBlbmQgYXBwcm9wcmlhdGUgcGFkZGluZyBmb3IgTUQ0LzUgY2FsY3VsYXRpb24uIFxyXG4gKiBJZiBhbnkgb2YgdGhlIGNoYXJhY3RlcnMgYXJlID4yNTUsIHRoZSBoaWdoIGJ5dGUgaXMgc2lsZW50bHkgaWdub3JlZC4gXHJcbiAqLyAgXHJcbmZ1bmN0aW9uIHN0cjJiaW5sKHN0cikgIFxyXG57ICBcclxuICB2YXIgbmJsayA9ICgoc3RyLmxlbmd0aCArIDgpID4+IDYpICsgMSAvLyBudW1iZXIgb2YgMTYtd29yZCBibG9ja3MgICBcclxuICB2YXIgYmxrcyA9IG5ldyBBcnJheShuYmxrICogMTYpICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgbmJsayAqIDE2OyBpKyspIGJsa3NbaV0gPSAwICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSAgXHJcbiAgICBibGtzW2k+PjJdIHw9IChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpIDw8ICgoaSU0KSAqIDgpICBcclxuICBibGtzW2k+PjJdIHw9IDB4ODAgPDwgKChpJTQpICogOCkgIFxyXG4gIGJsa3NbbmJsayoxNi0yXSA9IHN0ci5sZW5ndGggKiA4ICBcclxuICByZXR1cm4gYmxrcyAgXHJcbn0gIFxyXG4gIFxyXG4vKiBcclxuICogQ29udmVydCBhIHdpZGUtY2hhcmFjdGVyIHN0cmluZyB0byBhIHNlcXVlbmNlIG9mIDE2LXdvcmQgYmxvY2tzLCBzdG9yZWQgYXMgXHJcbiAqIGFuIGFycmF5LCBhbmQgYXBwZW5kIGFwcHJvcHJpYXRlIHBhZGRpbmcgZm9yIE1ENC81IGNhbGN1bGF0aW9uLiBcclxuICovICBcclxuZnVuY3Rpb24gc3RydzJiaW5sKHN0cikgIFxyXG57ICBcclxuICB2YXIgbmJsayA9ICgoc3RyLmxlbmd0aCArIDQpID4+IDUpICsgMSAvLyBudW1iZXIgb2YgMTYtd29yZCBibG9ja3MgICBcclxuICB2YXIgYmxrcyA9IG5ldyBBcnJheShuYmxrICogMTYpICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgbmJsayAqIDE2OyBpKyspIGJsa3NbaV0gPSAwICBcclxuICBmb3IodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSAgXHJcbiAgICBibGtzW2k+PjFdIHw9IHN0ci5jaGFyQ29kZUF0KGkpIDw8ICgoaSUyKSAqIDE2KSAgXHJcbiAgYmxrc1tpPj4xXSB8PSAweDgwIDw8ICgoaSUyKSAqIDE2KSAgXHJcbiAgYmxrc1tuYmxrKjE2LTJdID0gc3RyLmxlbmd0aCAqIDE2ICBcclxuICByZXR1cm4gYmxrcyAgXHJcbn0gIFxyXG4gIFxyXG4vKiBcclxuICogRXh0ZXJuYWwgaW50ZXJmYWNlIFxyXG4gKi8gIFxyXG5mdW5jdGlvbiBoZXhNRDUgKHN0cikgeyByZXR1cm4gYmlubDJoZXgoY29yZU1ENSggc3RyMmJpbmwoc3RyKSkpIH0gIFxyXG5mdW5jdGlvbiBoZXhNRDV3KHN0cikgeyByZXR1cm4gYmlubDJoZXgoY29yZU1ENShzdHJ3MmJpbmwoc3RyKSkpIH0gIFxyXG5mdW5jdGlvbiBiNjRNRDUgKHN0cikgeyByZXR1cm4gYmlubDJiNjQoY29yZU1ENSggc3RyMmJpbmwoc3RyKSkpIH0gIFxyXG5mdW5jdGlvbiBiNjRNRDV3KHN0cikgeyByZXR1cm4gYmlubDJiNjQoY29yZU1ENShzdHJ3MmJpbmwoc3RyKSkpIH0gIFxyXG4vKiBCYWNrd2FyZCBjb21wYXRpYmlsaXR5ICovICBcclxuZnVuY3Rpb24gY2FsY01ENShzdHIpIHsgcmV0dXJuIGJpbmwyaGV4KGNvcmVNRDUoIHN0cjJiaW5sKHN0cikpKSB9ICBcclxubW9kdWxlLmV4cG9ydHMgPSB7ICBcclxuICBoZXhNRDU6IGhleE1ENSAgXHJcbn0gIl19