'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var search = function (_wepy$component) {
    _inherits(search, _wepy$component);

    function search() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, search);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = search.__proto__ || Object.getPrototypeOf(search)).call.apply(_ref, [this].concat(args))), _this), _this.data = {
            seleCity: "全国",
            show_hide: true,
            searchvalue: '',
            filterTabs: ['原料', '改性料', '辅料', '回料'],
            classify: "分类",
            autoarrange: "智能排序",
            autoarrangeItem: ['按最新报价', '按浏览次数', '按报价次数'],
            secondcateindex: -1,
            cateindex: -1,
            showfilter: false,
            selectItem: 0,
            filterdata: {}, //筛选条件数据
            showfilterindex: null,
            selectType: "原料", //分类索引
            sType: "",
            sKey: "",
            autoOrder: "",
            deliveryPlace: "",
            cateid: 0, //分类id
            sortsArr: []
        }, _this.events = {
            'selectCity': function selectCity($event) {
                _this.seleCity = $event;
            }
        }, _this.methods = {
            chooseCity: function chooseCity() {
                wx.navigateTo({
                    url: 'cityposition'
                });
            },

            //搜索框设置

            hideSearchIcon: function hideSearchIcon(e) {
                this.searchvalue = e.detail.value;
                if (e.detail.value != "") {
                    this.show_hide = false;
                } else {
                    this.show_hide = true;
                }
            },
            showSearchIcon: function showSearchIcon(e) {
                if (e.detail.value == "") {
                    this.show_hide = true;
                    this.sKey = "";
                    this.$invoke('../material', 'getSelectTabData', {
                        pType: this.selectType,
                        searchKey: this.sKey,
                        seriesType: this.sType,
                        order: this.autoOrder
                    }); //向组件material 的getSelectTabData传数据
                    this.$invoke('../material', 'fetchMaterialData');
                    this.$invoke('../betterMaterial', 'getSelectTabData', {
                        pType: this.selectType,
                        searchKey: this.sKey,
                        seriesType: this.sType,
                        order: this.autoOrder
                    }); //向组件betterMaterial 的getSelectTabData传数据
                    this.$invoke('../betterMaterial', 'fetchBetterMaterialData');
                    this.$invoke('../accessories', 'getSelectTabData', {
                        pType: this.selectType,
                        searchKey: this.sKey,
                        seriesType: this.sType,
                        order: this.autoOrder
                    }); //向组件accessories 的getSelectTabData传数据
                    this.$invoke('../accessories', 'fetchAccessoriesMaterialData');
                    this.$invoke('../recirculatMaterial', 'getSelectTabData', {
                        pType: this.selectType,
                        searchKey: this.sKey,
                        seriesType: this.sType,
                        order: this.autoOrder
                    }); //向组件RecirculatMaterial 的getSelectTabData传数据
                    this.$invoke('../recirculatMaterial', 'fetchRecirculatMaterialData');
                }
            },
            gotoquery: function gotoquery(e) {
                this.sKey = "";
                this.sKey = e.detail.value.trim();
                if (this.sKey == "" || this.sKey == null) return false;
                this.sType = "全部";
                this.classify = "分类";
                this.autoOrder = "";
                this.autoarrange = "智能排序";
                this.secondcateindex = -1;
                this.cateindex = -1;
                this.showfilter = false;
                this.showfilterindex = null;
                this.$invoke('../material', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件material 的getSelectTabData传数据
                this.$invoke('../material', 'fetchMaterialData');
                this.$invoke('../betterMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件betterMaterial 的getSelectTabData传数据
                this.$invoke('../betterMaterial', 'fetchBetterMaterialData');
                this.$invoke('../accessories', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件AccessoriesMaterial 的getSelectTabData传数据
                this.$invoke('../accessories', 'fetchAccessoriesMaterialData');
                this.$invoke('../recirculatMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件RecirculatMaterial 的getSelectTabData传数据
                this.$invoke('../recirculatMaterial', 'fetchRecirculatMaterialData');
            },

            //选项卡
            selectTab: function selectTab(e) {
                this.sKey = "";
                this.searchvalue = "";
                this.show_hide = true;
                this.sType = "全部";
                this.classify = "分类";
                this.autoOrder = "";
                this.autoarrange = "智能排序";
                this.secondcateindex = -1;
                this.cateindex = -1;
                this.showfilter = false;
                this.showfilterindex = null;
                this.selectItem = e.target.dataset.i;
                this.$emit('some-event', e.target.dataset.i);
                this.selectType = e.target.dataset.type;
                if (this.selectType != "原料") {
                    this.autoarrangeItem = ['按最新报价', '按浏览次数'];
                } else {
                    this.autoarrangeItem = ['按最新报价', '按浏览次数', '按报价次数'];
                }
                this.fetchFilterData();
                this.$invoke('../material', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件material 的getSelectTabData传数据
                this.$invoke('../betterMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件betterMaterial 的getSelectTabData传数据
                this.$invoke('../accessories', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件AccessoriesMaterial 的getSelectTabData传数据
                this.$invoke('../recirculatMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                }); //向组件RecirculatMaterial 的getSelectTabData传数据
                this.$invoke('../material', 'fetchMaterialData');
                this.$invoke('../betterMaterial', 'fetchBetterMaterialData');
                this.$invoke('../accessories', 'fetchAccessoriesMaterialData');
                this.$invoke('../recirculatMaterial', 'fetchRecirculatMaterialData');
            },

            //下拉筛选
            setFilterPanel: function setFilterPanel(e) {
                this.showfilter = !this.showfilter;
                if (this.showfilter) {
                    this.showfilterindex = e.target.dataset.findex;
                } else {
                    this.showfilterindex = 0;
                }
            },
            hideFilter: function hideFilter() {
                this.secondcateindex = -1;
                this.showfilter = false;
                this.showfilterindex = null;
            },
            selectMaterialCate: function selectMaterialCate(e) {
                //分类筛选
                this.cateindex = e.currentTarget.dataset.index;
                this.cateid = e.currentTarget.dataset.cateid;
                this.sType = e.currentTarget.dataset.sorts;
                this.classify = e.currentTarget.dataset.sorts;
                this.showfilter = false;
                this.showfilterindex = null;

                this.$invoke('../material', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../material', 'fetchMaterialData');

                this.$invoke('../betterMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../betterMaterial', 'fetchBetterMaterialData');

                this.$invoke('../accessories', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../accessories', 'fetchAccessoriesMaterialData');

                this.$invoke('../recirculatMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../recirculatMaterial', 'fetchRecirculatMaterialData');
            },
            selectSecondCate: function selectSecondCate(e) {
                this.secondcateindex = e.target.dataset.index;
                this.autoOrder = e.target.dataset.autosort;
                this.autoarrange = e.target.dataset.autosort;
                this.showfilter = false;
                this.showfilterindex = null;
                this.$invoke('../material', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../material', 'fetchMaterialData');

                this.$invoke('../betterMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../betterMaterial', 'fetchBetterMaterialData');

                this.$invoke('../accessories', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../accessories', 'fetchAccessoriesMaterialData');

                this.$invoke('../recirculatMaterial', 'getSelectTabData', {
                    pType: this.selectType,
                    searchKey: this.sKey,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
                this.$invoke('../recirculatMaterial', 'fetchRecirculatMaterialData');
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(search, [{
        key: 'onLoad',
        value: function onLoad() {
            this.seleCity = '全国';
            this.$emit('indexLoadComplete', true);
            this.fetchFilterData();
        }
    }, {
        key: 'fetchFilterData',
        value: function fetchFilterData() {
            //获取筛选条件
            var that = this;
            _wepy2.default.request({
                url: _config.api.common.productCates.url,
                method: _config.api.common.productCates.method,
                data: {
                    'productType': that.selectType
                },
                success: function success(res) {
                    that.sortsArr = res.data.body.seriesTypeList;
                    that.$apply();
                }
            });
        }
    }]);

    return search;
}(_wepy2.default.component);

exports.default = search;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,