'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var companyName = function (_wepy$page) {
	_inherits(companyName, _wepy$page);

	function companyName() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, companyName);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = companyName.__proto__ || Object.getPrototypeOf(companyName)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
			'navigationBarTitleText': '俺搜认证',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this.components = {}, _this.data = {
			sle: false,
			pValue: '请输入企业名称',
			searchvalue: '',
			blurVal: '',
			showSeachList: true,
			pCompanyName: '请输入企业名称',
			pProvince: '',
			pCity: '',
			pAera: '',
			searchData: []
		}, _this.events = {}, _this.methods = {
			filterMname: function filterMname(e) {
				//筛选企业名称
				if (e.detail.value.length == 0) {
					this.showSeachList = false;
				} else {
					this.showSeachList = true;
				}
				console.log(e.detail.value);
				var that = this;
				_wepy2.default.request({
					url: _config.api.my.companySearchShow.url,
					method: _config.api.my.companySearchShow.method,
					data: {
						'enterpriseName': e.detail.value
					},
					success: function success(res) {
						console.log(res);
						if (res.data.body) {
							that.searchData = res.data.body;
						}
						that.$apply();
					}
				});
			},
			selectPname: function selectPname(e) {
				this.sle = true;
				this.selectIndex = e.currentTarget.dataset.i;
				this.pCompanyName = e.currentTarget.dataset.v;
				this.pCompanyNameType = e.currentTarget.dataset.t;
				this.pCompanyNameModel = e.currentTarget.dataset.b;
				this.pProvince = e.currentTarget.dataset.p;
				this.pCity = e.currentTarget.dataset.c;
				this.pAera = e.currentTarget.dataset.a;
				this.pAddress = e.currentTarget.dataset.d;
				this.showSeachList = false;
				console.log(this.pCompanyName);
			},
			hideSearchList: function hideSearchList() {
				this.showSeachList = false;
			},
			blurEvent: function blurEvent(e) {
				this.blurVal = e.detail.value;
				console.log(this.blurVal);
			},
			saveCompanyName: function saveCompanyName() {

				var saveData = {
					seleCompanyNames: this.sle ? this.pCompanyName : this.blurVal || this.pCompanyName,
					seleModel: this.pCompanyNameModel,
					seleProvince: this.pProvince,
					selePcity: this.pCity,
					seleParea: this.pAera,
					seleAdd: this.pAddress
				};
				var sendData = {
					seleType: this.pCompanyNameType
				};
				console.log(saveData);
				wx.setStorageSync('companyNameInfo', saveData);
				wx.setStorageSync('companyTypeInfo', sendData);
				this.sle = false;
				wx.navigateBack();
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(companyName, [{
		key: 'onLoad',
		value: function onLoad(e) {
			console.log(e);
			this.pCompanyName = e.comName == 'null' || e.comName == 'undefined' ? '' : e.comName;
		}
	}]);

	return companyName;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(companyName , 'pages/companyName'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,