'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _qqmapWxJssdk = require('./../utils/qqmap-wx-jssdk.js');

var _qqmapWxJssdk2 = _interopRequireDefault(_qqmapWxJssdk);

var _config = require('./../config.js');

var _city = require('./../utils/city.js');

var _city2 = _interopRequireDefault(_city);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cityposition = function (_wepy$page) {
	_inherits(cityposition, _wepy$page);

	function cityposition() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, cityposition);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = cityposition.__proto__ || Object.getPrototypeOf(cityposition)).call.apply(_ref, [this].concat(args))), _this2), _this2.config = {
			'navigationBarTitleText': '城市选择',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0386FF'
		}, _this2.data = {
			currentCityName: '无法定位',
			searchLetter: [],
			showLetter: "",
			winHeight: 0,
			cityList: [],
			isShowLetter: false,
			scrollTop: 0, //置顶高度
			scrollTopId: '', //置顶id
			city: "全国",
			hotcityList: [],
			historyCity: []
		}, _this2.methods = {
			bindScroll: function bindScroll() {},
			clickLetter: function clickLetter(e) {
				var showLetter = e.currentTarget.dataset.letter;
				this.showLetter = showLetter;
				this.isShowLetter = true;
				this.scrollTopId = showLetter;
				var that = this;
				setTimeout(function () {
					that.isShowLetter = false;
					that.$apply();
				}, 1000);
			},
			//默认选择城市
			defaultBindCity: function defaultBindCity(e) {
				var pages = this.getCurrentPages();
				var currPage = pages[pages.length - 1]; //当前页面
				var prevPage = pages[pages.length - 2]; //上一个页面
				prevPage.cityChange(e.currentTarget.dataset);
				wx.navigateBack();
			},
			//选择城市
			bindCity: function bindCity(e) {
				var obj = {};
				obj.cityName = e.currentTarget.dataset.city;
				obj.cityId = e.currentTarget.dataset.citycode;
				this.city = e.currentTarget.dataset.city;
				var pages = this.getCurrentPages();
				var currPage = pages[pages.length - 1]; //当前页面citycode
				var prevPage = pages[pages.length - 2]; //上一个页面
				var arr = this.historyCity;
				var newArr = [obj].concat(arr);
				if (newArr.length > 8) {
					newArr.splice(8, 1);
					wx.setStorageSync('historyCityList', this.unique1(newArr));
				}
				wx.setStorageSync('historyCityList', this.unique1(newArr));
				prevPage.cityChange(e.currentTarget.dataset);
				wx.navigateBack();
			},
			//选择热门城市
			bindHotCity: function bindHotCity(e) {
				var pages = this.getCurrentPages();
				var currPage = pages[pages.length - 1]; //当前页面
				var prevPage = pages[pages.length - 2]; //上一个页面
				prevPage.cityChange(e.currentTarget.dataset);
				wx.navigateBack();
			},
			//点击热门城市回到顶部
			hotCity: function hotCity() {
				this.scrollTop = 0;
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(cityposition, [{
		key: 'onShow',
		value: function onShow() {
			var that = this;
			var qqmapsdk = new _qqmapWxJssdk2.default({
				key: 'BFYBZ-FF73Q-FNK5G-GUK2J-5DUSO-6QBDJ' // 必填
			});
			wx.getLocation({
				type: 'wgs84',
				success: function success(res) {

					qqmapsdk.reverseGeocoder({
						location: {
							latitude: res.latitude,
							longitude: res.longitude
						},
						success: function success(addressRes) {
							that.currentCityName = addressRes.result.address_component.city;
							that.$apply();
						}
					});
				}
			});
		}
	}, {
		key: 'onLoad',
		value: function onLoad() {
			this.historyCity = wx.getStorageSync('historyCityList') == '' ? [] : wx.getStorageSync('historyCityList');
			// 生命周期函数--监听页面加载
			this.city = "全国";
			var searchLetter = _city2.default.searchLetter;
			var cityList = _city2.default.cityList();
			var sysInfo = wx.getSystemInfoSync();
			var winHeight = sysInfo.windowHeight;
			var itemH = winHeight / searchLetter.length;
			var tempObj = [];
			for (var i = 0; i < searchLetter.length; i++) {
				var temp = {};
				temp.name = searchLetter[i];
				temp.tHeight = i * itemH;
				temp.bHeight = (i + 1) * itemH;
				tempObj.push(temp);
			}
			this.winHeight = winHeight;
			this.itemH = itemH;
			this.searchLetter = tempObj;
			this.cityList = cityList;
			this.getHotCity();
		}
	}, {
		key: 'getHotCity',
		value: function getHotCity() {
			var _this = this;
			wx.request({
				method: _config.api.index.hotCity.method,
				url: _config.api.index.hotCity.url,
				data: {},
				success: function success(res) {
					if (res.statusCode == 200) {
						_this.hotcityList = res.data.body;
						_this.$apply();
					}
				}
			});
		}
	}, {
		key: 'unique1',
		value: function unique1(array) {
			// 数组去重
			var allArr = []; //新数组
			for (var i = 0; i < array.length; i++) {
				var flag = true;
				for (var j = 0; j < allArr.length; j++) {
					if (array[i].cityId == allArr[j].cityId) {
						flag = false;
					};
				};
				if (flag) {
					allArr.push(array[i]);
				};
			};
			return allArr;
		}
	}]);

	return cityposition;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(cityposition , 'pages/cityposition'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNpdHlwb3NpdGlvbi5qcyJdLCJuYW1lcyI6WyJjaXR5cG9zaXRpb24iLCJjb25maWciLCJkYXRhIiwiY3VycmVudENpdHlOYW1lIiwic2VhcmNoTGV0dGVyIiwic2hvd0xldHRlciIsIndpbkhlaWdodCIsImNpdHlMaXN0IiwiaXNTaG93TGV0dGVyIiwic2Nyb2xsVG9wIiwic2Nyb2xsVG9wSWQiLCJjaXR5IiwiaG90Y2l0eUxpc3QiLCJoaXN0b3J5Q2l0eSIsIm1ldGhvZHMiLCJiaW5kU2Nyb2xsIiwiY2xpY2tMZXR0ZXIiLCJlIiwiY3VycmVudFRhcmdldCIsImRhdGFzZXQiLCJsZXR0ZXIiLCJ0aGF0Iiwic2V0VGltZW91dCIsIiRhcHBseSIsImRlZmF1bHRCaW5kQ2l0eSIsInBhZ2VzIiwiZ2V0Q3VycmVudFBhZ2VzIiwiY3VyclBhZ2UiLCJsZW5ndGgiLCJwcmV2UGFnZSIsImNpdHlDaGFuZ2UiLCJ3eCIsIm5hdmlnYXRlQmFjayIsImJpbmRDaXR5Iiwib2JqIiwiY2l0eU5hbWUiLCJjaXR5SWQiLCJjaXR5Y29kZSIsImFyciIsIm5ld0FyciIsImNvbmNhdCIsInNwbGljZSIsInNldFN0b3JhZ2VTeW5jIiwidW5pcXVlMSIsImJpbmRIb3RDaXR5IiwiaG90Q2l0eSIsInFxbWFwc2RrIiwiUVFNYXBXWCIsImtleSIsImdldExvY2F0aW9uIiwidHlwZSIsInN1Y2Nlc3MiLCJyZXMiLCJyZXZlcnNlR2VvY29kZXIiLCJsb2NhdGlvbiIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwiYWRkcmVzc1JlcyIsInJlc3VsdCIsImFkZHJlc3NfY29tcG9uZW50IiwiZ2V0U3RvcmFnZVN5bmMiLCJzeXNJbmZvIiwiZ2V0U3lzdGVtSW5mb1N5bmMiLCJ3aW5kb3dIZWlnaHQiLCJpdGVtSCIsInRlbXBPYmoiLCJpIiwidGVtcCIsIm5hbWUiLCJ0SGVpZ2h0IiwiYkhlaWdodCIsInB1c2giLCJnZXRIb3RDaXR5IiwiX3RoaXMiLCJyZXF1ZXN0IiwibWV0aG9kIiwiYXBpIiwiaW5kZXgiLCJ1cmwiLCJzdGF0dXNDb2RlIiwiYm9keSIsImFycmF5IiwiYWxsQXJyIiwiZmxhZyIsImoiLCJ3ZXB5IiwicGFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0M7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7SUFDcUJBLFk7Ozs7Ozs7Ozs7Ozs7O21NQUNwQkMsTSxHQUFTO0FBQ1IsNkJBQTBCLE1BRGxCO0FBRVIsNkJBQTBCLFNBRmxCO0FBR1IsbUNBQWdDO0FBSHhCLEcsU0FNVEMsSSxHQUFPO0FBQ05DLG9CQUFpQixNQURYO0FBRU5DLGlCQUFjLEVBRlI7QUFHTkMsZUFBWSxFQUhOO0FBSU5DLGNBQVcsQ0FKTDtBQUtOQyxhQUFVLEVBTEo7QUFNTkMsaUJBQWMsS0FOUjtBQU9OQyxjQUFXLENBUEwsRUFPUTtBQUNkQyxnQkFBYSxFQVJQLEVBUVc7QUFDakJDLFNBQU0sSUFUQTtBQVVOQyxnQkFBYSxFQVZQO0FBV05DLGdCQUFhO0FBWFAsRyxTQWFQQyxPLEdBQVU7QUFDVEMsZUFBWSxzQkFBVyxDQUV0QixDQUhRO0FBSVRDLGdCQUFhLHFCQUFTQyxDQUFULEVBQVk7QUFDeEIsUUFBSVosYUFBYVksRUFBRUMsYUFBRixDQUFnQkMsT0FBaEIsQ0FBd0JDLE1BQXpDO0FBQ0EsU0FBS2YsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxTQUFLRyxZQUFMLEdBQW9CLElBQXBCO0FBQ0EsU0FBS0UsV0FBTCxHQUFtQkwsVUFBbkI7QUFDQSxRQUFJZ0IsT0FBTyxJQUFYO0FBQ0FDLGVBQVcsWUFBVztBQUNyQkQsVUFBS2IsWUFBTCxHQUFvQixLQUFwQjtBQUNBYSxVQUFLRSxNQUFMO0FBQ0EsS0FIRCxFQUdHLElBSEg7QUFJQSxJQWRRO0FBZVQ7QUFDQUMsb0JBQWlCLHlCQUFTUCxDQUFULEVBQVk7QUFDNUIsUUFBSVEsUUFBUSxLQUFLQyxlQUFMLEVBQVo7QUFDQSxRQUFJQyxXQUFXRixNQUFNQSxNQUFNRyxNQUFOLEdBQWUsQ0FBckIsQ0FBZixDQUY0QixDQUVZO0FBQ3hD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QU47QUFDQTtBQUNEO0FBVFMsSUFBWDtBQVdBOzs7MEJBRU8wRCxLLEVBQU07QUFBRTtBQUNmLE9BQUlDLFNBQVMsRUFBYixDQURhLENBQ0c7QUFDaEIsUUFBSSxJQUFJaEIsSUFBRSxDQUFWLEVBQVlBLElBQUVlLE1BQU1yRCxNQUFwQixFQUEyQnNDLEdBQTNCLEVBQStCO0FBQzlCLFFBQUlpQixPQUFPLElBQVg7QUFDQyxTQUFJLElBQUlDLElBQUUsQ0FBVixFQUFZQSxJQUFFRixPQUFPdEQsTUFBckIsRUFBNEJ3RCxHQUE1QixFQUFnQztBQUNoQyxTQUFHSCxNQUFNZixDQUFOLEVBQVM5QixNQUFULElBQW1COEMsT0FBT0UsQ0FBUCxFQUFVaEQsTUFBaEMsRUFBdUM7QUFDbkMrQyxhQUFPLEtBQVA7QUFDRDtBQUNGO0FBQ0QsUUFBR0EsSUFBSCxFQUFRO0FBQ05ELFlBQU9YLElBQVAsQ0FBWVUsTUFBTWYsQ0FBTixDQUFaO0FBQ0Q7QUFDRjtBQUNELFVBQU9nQixNQUFQO0FBQ0E7Ozs7RUFySndDRyxlQUFLQyxJOztrQkFBMUJ0RixZIiwiZmlsZSI6ImNpdHlwb3NpdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cdGltcG9ydCB3ZXB5IGZyb20gJ3dlcHknO1xyXG5cdGltcG9ydCBRUU1hcFdYIGZyb20gJy4uL3V0aWxzL3FxbWFwLXd4LWpzc2RrJztcclxuXHRpbXBvcnQgeyBhcGkgfSBmcm9tICcuLi9jb25maWcnO1xyXG5cdGltcG9ydCBjaXR5IGZyb20gJy4uL3V0aWxzL2NpdHknO1xyXG5cdGV4cG9ydCBkZWZhdWx0IGNsYXNzIGNpdHlwb3NpdGlvbiBleHRlbmRzIHdlcHkucGFnZSB7XHJcblx0XHRjb25maWcgPSB7XHJcblx0XHRcdCduYXZpZ2F0aW9uQmFyVGl0bGVUZXh0JzogJ+WfjuW4gumAieaLqScsXHJcblx0XHRcdCduYXZpZ2F0aW9uQmFyVGV4dFN0eWxlJzogJyNGRkZGRkYnLFxyXG5cdFx0XHQnbmF2aWdhdGlvbkJhckJhY2tncm91bmRDb2xvcic6ICcjMDM4NkZGJ1xyXG5cdFx0fVxyXG5cclxuXHRcdGRhdGEgPSB7XHJcblx0XHRcdGN1cnJlbnRDaXR5TmFtZTogJ+aXoOazleWumuS9jScsXHJcblx0XHRcdHNlYXJjaExldHRlcjogW10sXHJcblx0XHRcdHNob3dMZXR0ZXI6IFwiXCIsXHJcblx0XHRcdHdpbkhlaWdodDogMCxcclxuXHRcdFx0Y2l0eUxpc3Q6IFtdLFxyXG5cdFx0XHRpc1Nob3dMZXR0ZXI6IGZhbHNlLFxyXG5cdFx0XHRzY3JvbGxUb3A6IDAsIC8v572u6aG26auY5bqmXHJcblx0XHRcdHNjcm9sbFRvcElkOiAnJywgLy/nva7pobZpZFxyXG5cdFx0XHRjaXR5OiBcIuWFqOWbvVwiLFxyXG5cdFx0XHRob3RjaXR5TGlzdDogW10sXHJcblx0XHRcdGhpc3RvcnlDaXR5OiBbXVxyXG5cdFx0fVxyXG5cdFx0bWV0aG9kcyA9IHtcclxuXHRcdFx0YmluZFNjcm9sbDogZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjbGlja0xldHRlcjogZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdHZhciBzaG93TGV0dGVyID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQubGV0dGVyO1xyXG5cdFx0XHRcdHRoaXMuc2hvd0xldHRlciA9IHNob3dMZXR0ZXI7XHJcblx0XHRcdFx0dGhpcy5pc1Nob3dMZXR0ZXIgPSB0cnVlO1xyXG5cdFx0XHRcdHRoaXMuc2Nyb2xsVG9wSWQgPSBzaG93TGV0dGVyO1xyXG5cdFx0XHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0dGhhdC5pc1Nob3dMZXR0ZXIgPSBmYWxzZVxyXG5cdFx0XHRcdFx0dGhhdC4kYXBwbHkoKVxyXG5cdFx0XHRcdH0sIDEwMDApXHJcblx0XHRcdH0sXHJcblx0XHRcdC8v6buY6K6k6YCJ5oup5Z+O5biCXHJcblx0XHRcdGRlZmF1bHRCaW5kQ2l0eTogZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdHZhciBwYWdlcyA9IHRoaXMuZ2V0Q3VycmVudFBhZ2VzKCk7XHJcblx0XHRcdFx0dmFyIGN1cnJQYWdlID0gcGFnZXNbcGFnZXMubGVuZ3RoIC0gMV07IC8v5b2T5YmN6aG16Z2iXHJcblx0XHRcdFx0dmFyIHByZXZQYWdlID0gcGFnZXNbcGFnZXMubGVuZ3RoIC0gMl07IC8v5LiK5LiA5Liq6aG16Z2iXHJcblx0XHRcdFx0cHJldlBhZ2UuY2l0eUNoYW5nZShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldCk7XHJcblx0XHRcdFx0d3gubmF2aWdhdGVCYWNrKCk7XHJcblx0XHRcdH0sXHJcblx0XHRcdC8v6YCJ5oup5Z+O5biCXHJcblx0XHRcdGJpbmRDaXR5OiBmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0dmFyIG9iaiA9IHt9O1xyXG5cdFx0XHRcdG9iai5jaXR5TmFtZSA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmNpdHk7XHJcblx0XHRcdFx0b2JqLmNpdHlJZCA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmNpdHljb2RlO1xyXG5cdFx0XHRcdHRoaXMuY2l0eSA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmNpdHk7XHJcblx0XHRcdFx0dmFyIHBhZ2VzID0gdGhpcy5nZXRDdXJyZW50UGFnZXMoKTtcclxuXHRcdFx0XHR2YXIgY3VyclBhZ2UgPSBwYWdlc1twYWdlcy5sZW5ndGggLSAxXTsgLy/lvZPliY3pobXpnaJjaXR5Y29kZVxyXG5cdFx0XHRcdHZhciBwcmV2UGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDJdOyAvL+S4iuS4gOS4qumhtemdolxyXG5cdFx0XHRcdHZhciBhcnIgPSB0aGlzLmhpc3RvcnlDaXR5O1xyXG5cdFx0XHRcdHZhciBuZXdBcnIgPSBbb2JqXS5jb25jYXQoYXJyKTtcclxuXHRcdFx0XHRpZihuZXdBcnIubGVuZ3RoPjgpe1xyXG5cdFx0XHRcdFx0bmV3QXJyLnNwbGljZSg4LCAxKTtcclxuXHRcdFx0XHRcdHd4LnNldFN0b3JhZ2VTeW5jKCdoaXN0b3J5Q2l0eUxpc3QnLCB0aGlzLnVuaXF1ZTEobmV3QXJyKSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHd4LnNldFN0b3JhZ2VTeW5jKCdoaXN0b3J5Q2l0eUxpc3QnLCB0aGlzLnVuaXF1ZTEobmV3QXJyKSk7XHJcblx0XHRcdFx0cHJldlBhZ2UuY2l0eUNoYW5nZShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldCk7XHJcblx0XHRcdFx0d3gubmF2aWdhdGVCYWNrKCk7XHJcblx0XHRcdH0sXHJcblx0XHRcdC8v6YCJ5oup54Ot6Zeo5Z+O5biCXHJcblx0XHRcdGJpbmRIb3RDaXR5OiBmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0dmFyIHBhZ2VzID0gdGhpcy5nZXRDdXJyZW50UGFnZXMoKTtcclxuXHRcdFx0XHR2YXIgY3VyclBhZ2UgPSBwYWdlc1twYWdlcy5sZW5ndGggLSAxXTsgLy/lvZPliY3pobXpnaJcclxuXHRcdFx0XHR2YXIgcHJldlBhZ2UgPSBwYWdlc1twYWdlcy5sZW5ndGggLSAyXTsgLy/kuIrkuIDkuKrpobXpnaJcclxuXHRcdFx0XHRwcmV2UGFnZS5jaXR5Q2hhbmdlKGUuY3VycmVudFRhcmdldC5kYXRhc2V0KTtcclxuXHRcdFx0XHR3eC5uYXZpZ2F0ZUJhY2soKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0Ly/ngrnlh7vng63pl6jln47luILlm57liLDpobbpg6hcclxuXHRcdFx0aG90Q2l0eTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dGhpcy5zY3JvbGxUb3AgPSAwXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdG9uU2hvdygpIHtcclxuXHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdFx0XHR2YXIgcXFtYXBzZGsgPSBuZXcgUVFNYXBXWCh7XHJcblx0XHRcdFx0a2V5OiAnQkZZQlotRkY3M1EtRk5LNUctR1VLMkotNURVU08tNlFCREonIC8vIOW/heWhq1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0d3guZ2V0TG9jYXRpb24oe1xyXG5cdFx0XHRcdHR5cGU6ICd3Z3M4NCcsXHJcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdFx0cXFtYXBzZGsucmV2ZXJzZUdlb2NvZGVyKHtcclxuXHRcdFx0XHRcdFx0bG9jYXRpb246IHtcclxuXHRcdFx0XHRcdFx0XHRsYXRpdHVkZTogcmVzLmxhdGl0dWRlLFxyXG5cdFx0XHRcdFx0XHRcdGxvbmdpdHVkZTogcmVzLmxvbmdpdHVkZVxyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihhZGRyZXNzUmVzKSB7XHJcblx0XHRcdFx0XHRcdFx0dGhhdC5jdXJyZW50Q2l0eU5hbWUgPSBhZGRyZXNzUmVzLnJlc3VsdC5hZGRyZXNzX2NvbXBvbmVudC5jaXR5O1xyXG5cdFx0XHRcdFx0XHRcdHRoYXQuJGFwcGx5KCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdFx0b25Mb2FkKCkge1xyXG5cdFx0XHR0aGlzLmhpc3RvcnlDaXR5ID0gd3guZ2V0U3RvcmFnZVN5bmMoJ2hpc3RvcnlDaXR5TGlzdCcpPT0nJyA/IFtdIDogd3guZ2V0U3RvcmFnZVN5bmMoJ2hpc3RvcnlDaXR5TGlzdCcpO1xyXG5cdFx0XHQvLyDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWKoOi9vVxyXG5cdFx0XHR0aGlzLmNpdHkgPSBcIuWFqOWbvVwiO1xyXG5cdFx0XHR2YXIgc2VhcmNoTGV0dGVyID0gY2l0eS5zZWFyY2hMZXR0ZXI7XHJcblx0XHRcdHZhciBjaXR5TGlzdCA9IGNpdHkuY2l0eUxpc3QoKTtcclxuXHRcdFx0dmFyIHN5c0luZm8gPSB3eC5nZXRTeXN0ZW1JbmZvU3luYygpO1xyXG5cdFx0XHR2YXIgd2luSGVpZ2h0ID0gc3lzSW5mby53aW5kb3dIZWlnaHQ7XHJcblx0XHRcdHZhciBpdGVtSCA9IHdpbkhlaWdodCAvIHNlYXJjaExldHRlci5sZW5ndGg7XHJcblx0XHRcdHZhciB0ZW1wT2JqID0gW107XHJcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzZWFyY2hMZXR0ZXIubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHR2YXIgdGVtcCA9IHt9O1xyXG5cdFx0XHRcdHRlbXAubmFtZSA9IHNlYXJjaExldHRlcltpXTtcclxuXHRcdFx0XHR0ZW1wLnRIZWlnaHQgPSBpICogaXRlbUg7XHJcblx0XHRcdFx0dGVtcC5iSGVpZ2h0ID0gKGkgKyAxKSAqIGl0ZW1IO1xyXG5cdFx0XHRcdHRlbXBPYmoucHVzaCh0ZW1wKVxyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMud2luSGVpZ2h0ID0gd2luSGVpZ2h0O1xyXG5cdFx0XHR0aGlzLml0ZW1IID0gaXRlbUg7XHJcblx0XHRcdHRoaXMuc2VhcmNoTGV0dGVyID0gdGVtcE9iajtcclxuXHRcdFx0dGhpcy5jaXR5TGlzdCA9IGNpdHlMaXN0XHJcblx0XHRcdHRoaXMuZ2V0SG90Q2l0eSgpO1xyXG5cdFx0fVxyXG5cdFx0Z2V0SG90Q2l0eSgpe1xyXG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xyXG5cdFx0XHR3eC5yZXF1ZXN0KHtcclxuXHRcdFx0XHRtZXRob2Q6IGFwaS5pbmRleC5ob3RDaXR5Lm1ldGhvZCxcclxuXHRcdFx0XHR1cmw6IGFwaS5pbmRleC5ob3RDaXR5LnVybCxcclxuXHRcdFx0XHRkYXRhOiB7fSxcclxuXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdFx0aWYgKHJlcy5zdGF0dXNDb2RlID09IDIwMCkge1xyXG5cdFx0XHRcdFx0XHRfdGhpcy5ob3RjaXR5TGlzdCA9IHJlcy5kYXRhLmJvZHk7XHJcblx0XHRcdFx0XHRcdF90aGlzLiRhcHBseSgpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHJcblx0XHR1bmlxdWUxKGFycmF5KXsgLy8g5pWw57uE5Y676YeNXHJcblx0XHRcdHZhciBhbGxBcnIgPSBbXTsvL+aWsOaVsOe7hFxyXG5cdFx0XHRmb3IodmFyIGk9MDtpPGFycmF5Lmxlbmd0aDtpKyspe1xyXG5cdFx0XHRcdHZhciBmbGFnID0gdHJ1ZTtcclxuXHRcdFx044CA44CAZm9yKHZhciBqPTA7ajxhbGxBcnIubGVuZ3RoO2orKyl7XHJcblx0XHRcdFx0XHRpZihhcnJheVtpXS5jaXR5SWQgPT0gYWxsQXJyW2pdLmNpdHlJZCl7XHJcblx0XHRcdOOAgOOAgOOAgOOAgOOAgFx0ZmxhZyA9IGZhbHNlO1xyXG5cdFx0XHTjgIDjgIDjgIDjgIB9O1xyXG5cdFx0XHTjgIDjgIB9O1xyXG5cdFx0XHTjgIDjgIBpZihmbGFnKXtcclxuXHRcdFx044CA44CA44CA44CAYWxsQXJyLnB1c2goYXJyYXlbaV0pO1xyXG5cdFx0XHTjgIDjgIB9O1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRyZXR1cm4gYWxsQXJyO1xyXG5cdFx0fVxyXG5cdH1cclxuIl19