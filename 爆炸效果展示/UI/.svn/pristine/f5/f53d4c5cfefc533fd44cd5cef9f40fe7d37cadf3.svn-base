'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../../config.js');

var _findmeSearch = require('./../../index/findmeSearch.js');

var _findmeSearch2 = _interopRequireDefault(_findmeSearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var findmeBuyMaterial = function (_wepy$component) {
    _inherits(findmeBuyMaterial, _wepy$component);

    function findmeBuyMaterial() {
        var _ref;

        var _temp, _this2, _ret;

        _classCallCheck(this, findmeBuyMaterial);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = findmeBuyMaterial.__proto__ || Object.getPrototypeOf(findmeBuyMaterial)).call.apply(_ref, [this].concat(args))), _this2), _this2.components = {
            findmeSearch: _findmeSearch2.default
        }, _this2.data = {
            ballBottom: 98,
            ballRight: 5,
            screenHeight: 0,
            screenWidth: 0,
            scrolltop: 0,
            linkerList: [],
            loadNum: 0,
            wait: true,
            loadmore: true,
            scrollWrapHeight: 0,
            pageIndex: 1, //分页
            fscrolltop: null,
            showTopBtn: false,
            proType: '原料',
            sType: '',
            autoOrder: '',
            sKey: '',
            dPlace: '',
            joinFlag: '',
            loginUId: -1
        }, _this2.events = {
            'selectCity': function selectCity($event) {
                _this2.dPlace = $event;
                _this2.$apply();
                _this2.fetchlinkersData();
            },
            'sendFilterDatas': function sendFilterDatas(filterParam) {
                _this2.proType = filterParam.pType;
                _this2.sType = filterParam.seriesType;
                _this2.autoOrder = filterParam.order;
                _this2.sKey = filterParam.searchKey;
                _this2.fetchlinkersData();
            },
            'hasUserInfo': function hasUserInfo(arg) {
                _this2.joinFlag = arg.joinFlag;
            }
        }, _this2.methods = {
            toMarketDetail: function toMarketDetail(e) {
                var userId = e.currentTarget.dataset.uid;
                var pType = e.currentTarget.dataset.type;
                wx.navigateTo({
                    url: 'marketingDetail?userId=' + userId + '&productType=' + pType
                });
            },
            gotoCompanyDetail: function gotoCompanyDetail(e) {
                var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
                if (antsooUserInfo == '') {
                    wx.showModal({
                        title: '提示',
                        content: '查看更多信息请先登录',
                        confirmText: '去登录',
                        confirmColor: '#239FDB',
                        success: function success(res) {
                            if (res.confirm) {
                                console.log('用户点击确定');
                                wx.navigateTo({
                                    url: 'login'
                                });
                            } else if (res.cancel) {
                                console.log('用户点击取消');
                            }
                        }
                    });
                } else {
                    var id = e.currentTarget.dataset.companyid;
                    wx.navigateTo({
                        url: 'companyDetailInfo?id=' + id
                    });
                }
            },
            scrollLoading: function scrollLoading() {
                //滚动加载
                console.log("loadMore:" + this.loadmore);
                if (this.loadmore) {
                    this.pageIndex++;
                    this.fetchlinkersData();
                } else {
                    return false;
                }
            },
            goToTop: function goToTop() {
                //回到顶部
                this.scrolltop = 0;
            },
            onPullDownRefresh: function onPullDownRefresh() {
                console.log('上拉刷新');
            },
            toPropaganda: function toPropaganda() {
                if (this.loginUId == undefined || this.loginUId == "") {
                    wx.navigateTo({
                        url: 'login?fromPage=propaganda'
                    });
                    return;
                }
                if (this.joinFlag == "noappliy" || this.joinFlag == "unpassed" || this.joinFlag == "applied" || this.joinFlag == undefined || this.joinFlag == "leaveoffice") {
                    wx.navigateTo({
                        url: 'propaganda?redirect=index&userId=' + this.loginUId
                    });
                }
                if (this.joinFlag == "passed") {
                    wx.navigateTo({
                        url: 'subPrice?pUnit=元/吨&deliverway=自提&picList=../resources/img/imgUpload.jpg'
                    });
                }
                this.$apply();
            }
        }, _temp), _possibleConstructorReturn(_this2, _ret);
    }

    _createClass(findmeBuyMaterial, [{
        key: 'onShow',
        value: function onShow() {
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.loginUId = antsooUserInfo.userId;
            this.$apply();
        }
    }, {
        key: 'onLoad',
        value: function onLoad() {
            var _this = this;
            wx.getSystemInfo({
                success: function success(res) {
                    _this.screenHeight = res.windowHeight;
                    _this.screenWidth = res.windowWidth;
                }
            });
            this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 130;
            this.fetchlinkersData();
        }
    }, {
        key: 'fetchlinkersData',
        value: function fetchlinkersData() {
            wx.showLoading({
                title: '加载中'
            });
            var that = this;
            var pageSize = 20;
            _wepy2.default.request({
                url: _config.api.findMeBuyMaterial.linkerList.url,
                method: _config.api.findMeBuyMaterial.linkerList.method,
                data: {
                    'productType': that.proType,
                    'seriesType': that.sType,
                    'order': that.autoOrder,
                    'searchKey': that.sKey,
                    'deliveryPlace': that.dPlace,
                    'pageInfo2': {
                        'pSize': pageSize,
                        'pIndex': that.pageIndex
                    }
                },
                success: function success(res) {
                    var materialData = res.data.body.userDtoList;
                    var tPages = res.data.page.tCount;
                    var pages = materialData.length / 20;
                    var isInt = tPages / (that.pageIndex * 20);
                    that.loadmore = pages == 1 && isInt != 1 ? true : false;
                    if (that.pageIndex > 1) {
                        that.linkerList = that.linkerList.concat(materialData);
                    } else {
                        that.linkerList = materialData;
                    }
                    that.$apply();
                    wx.hideLoading();
                }
            });
        }
    }]);

    return findmeBuyMaterial;
}(_wepy2.default.component);

exports.default = findmeBuyMaterial;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,