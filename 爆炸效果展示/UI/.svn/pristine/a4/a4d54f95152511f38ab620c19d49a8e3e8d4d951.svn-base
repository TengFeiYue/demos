'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../../config.js');

var _location = require('./../../../utils/location.js');

var _location2 = _interopRequireDefault(_location);

var _connectionSearch = require('./../../connectionSearch.js');

var _connectionSearch2 = _interopRequireDefault(_connectionSearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var index = function (_wepy$component) {
	_inherits(index, _wepy$component);

	function index() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, index);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = index.__proto__ || Object.getPrototypeOf(index)).call.apply(_ref, [this].concat(args))), _this2), _this2.components = {
			connectionSearch: _connectionSearch2.default
		}, _this2.data = {
			loadmore: false,
			scrollWrapHeight: 0,
			loginUId: -1,
			info: [],
			param: '',
			pageIndex: 1,
			mType: "",
			pDuty: "",
			pDistance: "",
			Position: "",
			pModel: "",
			name: -0,
			connectionList: []
		}, _this2.events = {
			'personFilter': function personFilter(arg) {
				this.pageIndex = 1;
				this.mType = arg.mType;
				this.pDuty = arg.duty;
				this.pDistance = arg.distance;
				this.pModel = arg.model;
				this.fetchRelationNumData();
				this.info = [];
				this.name = Number(arg.name);
				this.getInfo();
				this.fetchRelationNumData();
			},
			'personRole': function personRole(parmas) {
				this.mType = '';
				this.pDuty = parmas.findtItem;
				this.pDistance = '';
				this.pModel = '';
				this.getInfo();
				this.fetchRelationNumData();
			}
		}, _this2.methods = {
			scrollLoading: function scrollLoading() {
				//滚动加载
				if (this.loadmore) {
					this.pageIndex++;
					if (this.pageIndex < 6) {
						this.getInfo();
					} else {
						this.loadmore = false;
						wx.showModal({
							title: '',
							content: '更多内容请前往按搜app',
							showCancel: true,
							confirmText: '确定',
							confirmColor: '#0092ff',
							success: function success(res) {
								if (res.confirm) {
									if (wx.getSystemInfoSync().system.toLowerCase().indexOf('andr') != -1) {
										console.log('android');
										wx.navigateTo({
											url: 'downLoad'
										});
									} else {
										console.log('iso');
										wx.navigateTo({
											url: 'downLoad'
										});
									}
								} else if (res.cancel) {
									console.log('用户点击取消');
								}
							}
						});
					}
				}
			},
			toPersonDetail: function toPersonDetail(e) {
				if (!this.loginUId) {
					wx.navigateTo({
						url: 'login?fromPage=personDetail'
					});
					return;
				}
				var memberId = e.currentTarget.dataset.id;
				wx.navigateTo({
					url: 'connectionDetail?memberId=' + memberId + '&userId=' + this.loginUId
				});
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(index, [{
		key: 'onShow',
		value: function onShow() {}
	}, {
		key: 'onLoad',
		value: function onLoad(e) {
			var _this = this;
			var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");

			_location2.default.getLocation().then(function (res) {
				console.log(res);
				_this.seleCity = res.city;
				_this.loginUId = antsooUserInfo.userId;
				_this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 130;
				_this.Position = res.lat + ',' + res.lng + '|' + res.province + '|' + res.city + '|' + res.area;
				_this.fetchRelationNumData();
				_this.getInfo();
				_this.$apply();
			});
		}
	}, {
		key: 'getInfo',
		value: function getInfo() {
			// 获取人脉列表
			var that = this;
			wx.request({
				method: _config.api.relations.relationList.method,
				url: _config.api.relations.relationList.url,
				data: {
					userId: this.loginUId,
					position: this.Position,
					firstCategory: this.mType,
					job: this.pDuty,
					distance: this.pDistance,
					companyModel: this.pModel,
					order: this.name,
					pageInfo2: {
						pIndex: this.pageIndex,
						pSize: 20
					}

				},
				success: function success(res) {
					if (res.statusCode == 200) {
						var info = res.data.body;
						var tpages = res.data.page.tCount;
						var pages = info.length / 20;
						var isInt = tpages / (that.pageIndex * 20);
						that.loadmore = pages == 1 && isInt != 1 ? true : false;

						if (that.pageIndex > 1) {
							that.info = that.info.concat(info);
						} else {
							that.info = info;
						}
						that.$apply();
					}
				}
			});
		}
	}, {
		key: 'fetchRelationNumData',
		value: function fetchRelationNumData() {
			//获取人脉数量
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.relationNum.url,
				method: _config.api.relations.relationNum.method,
				data: {
					firstCategory: this.mType,
					job: this.pDuty,
					distance: this.pDistance,
					companyModel: this.pModel,
					position: this.Position
				},
				success: function success(res) {
					that.$broadcast('getNum', res.data.body);
					that.$apply();
				}
			});
		}
	}]);

	return index;
}(_wepy2.default.component);

exports.default = index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,