'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

var _switchSubPrice = require('./switchSubPrice.js');

var _switchSubPrice2 = _interopRequireDefault(_switchSubPrice);

var _mySubPrice = require('./mySubPrice.js');

var _mySubPrice2 = _interopRequireDefault(_mySubPrice);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var subPrice = function (_wepy$page) {
    _inherits(subPrice, _wepy$page);

    function subPrice() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, subPrice);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = subPrice.__proto__ || Object.getPrototypeOf(subPrice)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
            'navigationBarTitleText': '报价',
            'navigationBarTextStyle': '#FFFFFF',
            'navigationBarBackgroundColor': '#0386FF'
        }, _this.components = {
            switchSubPrice: _switchSubPrice2.default,
            mySubPrice: _mySubPrice2.default
        }, _this.data = {
            latestpriceList: [],
            tabArr: ['报价', '我的'],
            curIndex: 0,
            switchSubPriceShow: true,
            mySubPriceShow: false
        }, _this.methods = {
            hideOperateModel: function hideOperateModel() {
                this.$broadcast('hideFilterList', false);
                this.$broadcast('hideOperation', -1);
            },
            toIndex: function toIndex() {
                wx.navigateTo({
                    url: 'index'
                });
            },
            selectTab: function selectTab(e) {
                this.curIndex = e.target.dataset.index;
                if (this.curIndex == 0) {
                    this.$broadcast('giveImg', -1);
                    this.switchSubPriceShow = true;
                    this.mySubPriceShow = false;
                } else if (this.curIndex == 1) {
                    this.switchSubPriceShow = false;
                    this.mySubPriceShow = true;
                }
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(subPrice, [{
        key: 'onShow',
        value: function () {
            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var pages, currPage;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                pages = this.getCurrentPages();
                                currPage = pages[pages.length - 1];

                                this.$broadcast('selectCity', currPage.data.seleCity);
                                this.$broadcast('descript', currPage.data.description);

                            case 4:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function onShow() {
                return _ref2.apply(this, arguments);
            }

            return onShow;
        }()
    }, {
        key: 'onLoad',
        value: function onLoad(e) {
            if (e.getfocus == 'fucus') {
                this.$broadcast('getFocus', true);
            }
            console.log(e);
            if (e.redirect == 'my') {
                this.curIndex = 1;
                this.switchSubPriceShow = false;
                this.mySubPriceShow = true;
            }
            if (e.redirect == 'edit') {
                this.curIndex = 0;
                this.switchSubPriceShow = true;
                this.mySubPriceShow = false;
            }
            if (e.hasRefresh == 'yes') {
                this.$broadcast('refreshed', false);
            }
            this.$broadcast('copyData', {
                edit: e.edit,
                up: e.up,
                mName: e.mName,
                mProducer: e.producer,
                mBrandNum: e.brandNum,
                mPrice: parseInt(e.price),
                mUnit: e.pUnit,
                deliveryWay: e.deliverway,
                seleCity: e.deliversite,
                mModel: e.model,
                pVal: e.remark,
                radioIndex: parseInt(e.mType),
                taxRadioIndex: parseInt(e.hastax),
                upPics: e.picList,
                dailId: e.id,
                tName: e.tName,
                showD: e.showDel,
                getType: e.getType
            });
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.$broadcast('getUserId', antsooUserInfo.userId);
            this.$broadcast('hasConfirmed', antsooUserInfo.joinFlag);
            this.fetchPricesData();
        }
    }, {
        key: 'fetchPricesData',
        value: function fetchPricesData() {
            wx.showLoading({
                title: '加载中'
            });
            var that = this;
            _wepy2.default.request({
                url: _config.api.product.fetchPricesDatas.url,
                method: _config.api.product.fetchPricesDatas.method,
                success: function success(res) {
                    that.latestpriceList = res.data.body;
                    that.$apply();
                    wx.hideLoading();
                }
            });
        }
    }]);

    return subPrice;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(subPrice , 'pages/subPrice'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,