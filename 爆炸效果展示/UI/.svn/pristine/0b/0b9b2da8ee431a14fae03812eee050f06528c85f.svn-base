'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

var _location = require('./../utils/location.js');

var _location2 = _interopRequireDefault(_location);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var connectionSearch = function (_wepy$component) {
	_inherits(connectionSearch, _wepy$component);

	function connectionSearch() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, connectionSearch);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = connectionSearch.__proto__ || Object.getPrototypeOf(connectionSearch)).call.apply(_ref, [this].concat(args))), _this), _this.data = {
			materialType: [],
			dutyType: [], // 后台返回的职位列表
			getDutyArr: [], // 点击当前职位获取到的职位id：string
			nearSite: [], // 后台返回地理位置列表
			getDisArr: '', // 点击当前的地理位置获取到的距离id：string
			runingModel: [], // 后台返回的经营模式列表
			getRuningArr: '', //点击当前的经营模式获取到的id：string
			second_height: 0,
			getMaterial: [], //chanyelian
			getDuty: [], //zhiwei
			getSite: [],
			getModel: [],
			chooseArr: [],
			getArr: [],
			autoSorting: [],
			choosedSort: '智能排序',
			itemId: 0,
			selIndex: -1,
			choosedItem: -1,
			closeAll: false,
			tabComAct: false,
			searchvalue: "",
			show_hide: true,
			filterShow: false,
			relationNum: 0
		}, _this.events = {
			'getNum': function getNum(param) {
				this.relationNum = param;
			}
		}, _this.methods = {
			toSearchPer: function toSearchPer() {
				wx.navigateTo({
					url: 'searchPer'
				});
			},

			//显示智能排序
			showFiler: function showFiler() {
				this.filterShow = true;
			},
			closeLayer: function closeLayer() {
				this.filterShow = false;
			},

			//编辑选项
			editOptions: function editOptions() {
				this.closeAll = true;
			},
			closeAll: function closeAll() {
				this.closeAll = false;
			},
			chooseCondition: function chooseCondition(e) {
				this.choosedItem = e.currentTarget.dataset.i;
				this.choosedSort = e.currentTarget.dataset.v;
				this.itemId = Number(e.currentTarget.dataset.id);
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
				this.filterShow = false;
			},
			selectIndustryChain: function selectIndustryChain(e) {
				//产业链
				var materialType = this.materialType;
				var checkArr = e.detail.value;
				for (var i = 0; i < materialType.length; i++) {
					if (checkArr.indexOf(materialType[i].name) != -1) {
						materialType[i].checked = true;
					} else {
						materialType[i].checked = false;
					}
				}
				this.getArr = checkArr;
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
				console.log(this.getArr);
			},
			selectDuties: function selectDuties(e) {
				//担任职位
				var dutyType = this.dutyType;
				var checkDutyArr = e.detail.value;
				for (var i = 0; i < dutyType.length; i++) {
					if (checkDutyArr.indexOf(dutyType[i].id) != -1) {
						dutyType[i].checked = true;
					} else {
						dutyType[i].checked = false;
					}
				}
				this.getDutyArr = checkDutyArr;
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},
			selectSite: function selectSite(e) {
				//选择地理位置
				var nearSite = this.nearSite;
				var checkSite = e.detail.value;
				for (var i = 0; i < nearSite.length; i++) {
					if (checkSite.indexOf(nearSite[i].id) != -1) {
						nearSite[i].checked = true;
					} else {
						nearSite[i].checked = false;
					}
				}
				this.getDisArr = checkSite;
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},
			selectModels: function selectModels(e) {
				//选择经营模式
				var runingModel = this.runingModel;
				var checkModel = e.detail.value;
				for (var i = 0; i < runingModel.length; i++) {
					if (checkModel.indexOf(runingModel[i].id) != -1) {
						runingModel[i].checked = true;
					} else {
						runingModel[i].checked = false;
					}
				}
				this.getRuningArr = checkModel;
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},

			/*删除选择项*/
			deleteSelected: function deleteSelected(e) {
				var materialType = this.materialType;
				var Index = e.currentTarget.dataset.i;
				for (var i = 0; i < materialType.length; i++) {
					if (materialType[i].name == this.getArr[Index]) {
						materialType[i].checked = false;
						this.getMaterial.splice(this.getMaterial.indexOf(materialType[i].name), 1);
					}
				}
				this.getArr.splice(Index, 1);
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},
			deleteDuty: function deleteDuty(e) {
				var dutyType = this.dutyType;
				var Index = e.currentTarget.dataset.i;
				for (var i = 0; i < dutyType.length; i++) {
					if (dutyType[i].id == this.getDutyArr[Index]) {
						dutyType[i].checked = false;
						this.getDuty.splice(this.getDuty.indexOf(dutyType[i].name), 1);
					}
				}
				this.getDutyArr.splice(Index, 1);
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},
			deleteSite: function deleteSite(e) {
				var nearSite = this.nearSite;
				for (var i = 0; i < nearSite.length; i++) {
					if (nearSite[i].id == this.getDisArr) {
						nearSite[i].checked = false;
					}
				}
				this.getDisArr = '';
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			},
			deleteModel: function deleteModel(e) {
				var runingModel = this.runingModel;
				for (var i = 0; i < runingModel.length; i++) {
					if (runingModel[i].id == this.getRuningArr) {
						runingModel[i].checked = false;
					}
				}
				this.getRuningArr = '';
				this.$emit('personFilter', {
					mType: this.getArr.join(','),
					duty: this.getDutyArr.join(','),
					distance: this.getDisArr,
					model: this.getRuningArr,
					name: this.itemId
				});
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(connectionSearch, [{
		key: 'onLoad',
		value: function onLoad() {
			var that = this;
			// 获取系统信息
			wx.getSystemInfo({
				success: function success(res) {
					that.second_height = res.windowHeight - res.windowWidth / 750 * 300 + 40;
				}
			});
			this.fetchAutoSortData();
			this.fetchpersonDutyData();
			this.fetchDistanceData();
			this.fetchMainLinesData();
			this.fetchruningModelData();
		}
	}, {
		key: 'fetchAutoSortData',
		value: function fetchAutoSortData() {
			//智能排序
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.autoSort.url,
				method: _config.api.relations.autoSort.method,
				data: {},
				success: function success(res) {
					that.autoSorting = res.data.body;
					that.$apply();
				}
			});
		}
	}, {
		key: 'fetchpersonDutyData',
		value: function fetchpersonDutyData() {
			//选择职位
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.personDuty.url,
				method: _config.api.relations.personDuty.method,
				data: {},
				success: function success(res) {
					that.dutyType = res.data.body;
					that.$apply();
				}
			});
		}
	}, {
		key: 'fetchDistanceData',
		value: function fetchDistanceData() {
			//选择距离
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.distance.url,
				method: _config.api.relations.distance.method,
				data: {},
				success: function success(res) {
					that.nearSite = res.data.body;
					that.$apply();
				}
			});
		}
	}, {
		key: 'fetchMainLinesData',
		value: function fetchMainLinesData() {
			//选择行业
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.mainLines.url,
				method: _config.api.relations.mainLines.method,
				data: {},
				success: function success(res) {
					that.materialType = res.data.body;
					that.$apply();
				}
			});
		}
	}, {
		key: 'fetchruningModelData',
		value: function fetchruningModelData() {
			//选择经营模式
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.runningModel.url,
				method: _config.api.relations.runningModel.method,
				data: {},
				success: function success(res) {
					that.runingModel = res.data.body;
					that.$apply();
				}
			});
		}
	}]);

	return connectionSearch;
}(_wepy2.default.component);

exports.default = connectionSearch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,