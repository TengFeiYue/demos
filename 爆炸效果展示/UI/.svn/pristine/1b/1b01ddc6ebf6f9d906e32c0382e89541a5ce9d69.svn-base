'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var comRoundCom = function (_wepy$page) {
	_inherits(comRoundCom, _wepy$page);

	function comRoundCom() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, comRoundCom);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = comRoundCom.__proto__ || Object.getPrototypeOf(comRoundCom)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
			'navigationBarTitleText': '周边企业',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this.data = {
			loginUId: -1,
			showfilter: false,
			showfilterindex: 0,
			selectedSite: '附近',
			selectedAll: '',
			selectedAllModel: '',
			tabItem: '原料',
			distance: [],
			near: [],
			all: [],
			allModel: [],
			nearIndex: 'a',
			allIndex: 0,
			allModelIndex: 0,
			disIndex: 0,
			currentCity: '',
			long: -1,
			lat: -1,
			cityName: '',
			pageIndex: 1,
			info: [],
			nearInfo: [],
			scrollWrapHeight: 0,
			loadmore: true
		}, _this.events = {}, _this.methods = {
			scrollLoading: function scrollLoading() {
				//滚动加载
				if (this.loadmore) {
					this.pageIndex++;
					if (this.pageIndex < 6) {
						this.fetchCompanyListData();
					} else {
						this.loadmore = false;
						wx.showModal({
							title: '',
							content: '更多内容请前往按搜app',
							showCancel: true,
							confirmText: '确定',
							confirmColor: '#0092ff',
							success: function success(res) {
								if (res.confirm) {
									if (wx.getSystemInfoSync().system.toLowerCase().indexOf('andr') != -1) {
										console.log('android');
										wx.navigateTo({
											url: 'downLoad'
										});
									} else {
										console.log('iso');
										wx.navigateTo({
											url: 'downLoad'
										});
									}
								} else if (res.cancel) {
									console.log('用户点击取消');
								}
							}
						});
					}
				}
			},

			//选项卡
			chooseType: function chooseType(e) {
				this.selectedSite = '附近';
				this.selectedAll = '';
				this.selectedAllModel = '';
				this.showfilter = false;
				this.showfilterindex = 0;
				this.all = e.currentTarget.dataset.a;
				this.tabItem = e.currentTarget.dataset.v;
			},

			//搜索框设置
			hideSearchIcon: function hideSearchIcon() {
				this.showfilter = false;
				this.showfilterindex = 0;
			},
			setFilterPanel: function setFilterPanel(e) {
				this.showfilter = !this.showfilter;
				if (this.showfilter) {
					this.showfilterindex = e.currentTarget.dataset.index;
				} else {
					this.showfilterindex = 0;
				}
			},
			hideFilter: function hideFilter() {
				this.showfilter = false;
				this.showfilterindex = 0;
			},
			selectDistance: function selectDistance(e) {
				this.disIndex = e.currentTarget.dataset.index;
				this.selectedSite = e.currentTarget.dataset.sort;
				this.showfilter = false;
				this.showfilterindex = 0;
				this.fetchCompanyListData();
			},
			selectAll: function selectAll(e) {
				console.log(this.selectedAll);
				this.allIndex = e.currentTarget.dataset.index;
				this.selectedAll = e.currentTarget.dataset.sort;
				this.showfilter = false;
				this.showfilterindex = 0;
				this.fetchCompanyListData();
			},
			selectAllModel: function selectAllModel(e) {
				this.allModelIndex = e.currentTarget.dataset.index;
				this.selectedAllModel = e.currentTarget.dataset.sort;
				this.showfilter = false;
				this.showfilterindex = 0;
				this.fetchCompanyListData();
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(comRoundCom, [{
		key: 'onShow',
		value: function onShow() {
			this.pageIndex = 1;
		}
	}, {
		key: 'onLoad',
		value: function onLoad(option) {
			this.selectedSite = '附近';
			this.selectedAll = '全部行业';
			this.selectedAllModel = '全部模式';
			var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
			this.loginUId = antsooUserInfo.userId;
			this.cityName = option.cityName;
			this.long = option.gdlongitude;
			this.lat = option.gdlatitude;
			this.fetchCompanyFilterData();
			this.fetchCompanyListData();
			this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight;
		}
	}, {
		key: 'onUnload',
		value: function onUnload() {
			this.showfilterindex = 0;
			this.showfilter = false;
		}
	}, {
		key: 'fetchCompanyFilterData',
		value: function fetchCompanyFilterData() {
			var that = this;
			_wepy2.default.request({
				url: _config.api.company.companyFilter.url,
				method: _config.api.company.companyFilter.method,
				data: {
					cityName: that.cityName
				},
				success: function success(res) {
					that.allModel = res.data.body.businessModeList;
					that.near = res.data.body.districtAreaDtoList;
					that.distance = res.data.body.nearbyList;
					that.all = res.data.body.baseFirstCategoryList[0].childs;
					that.$apply();
				}
			});
		}
	}, {
		key: 'fetchCompanyListData',
		value: function fetchCompanyListData() {
			//获取企业列表
			var that = this;
			var baseSecondCategory = that.selectedAll == '全部行业' ? '' : that.selectedAll;
			_wepy2.default.request({
				url: _config.api.company.companyRound.url,
				method: _config.api.company.companyRound.method,
				data: {
					type: that.tabItem,
					cityName: that.cityName,
					distanceCondition: that.selectedSite,
					baseThirdCategory: '', //???
					businessMode: that.selectedAllModel == '全部模式' ? '' : that.selectedAllModel,
					baseSecondCategory: that.selectedAll == '全部行业' ? '' : that.selectedAll,
					longitude: that.long,
					latitude: that.lat,
					pageInfo2: {
						pSize: 20,
						pIndex: that.pageIndex
					}
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						var info = that.info = res.data.body.enterpriseInfoDtoList;
						that.nearInfo = res.data.body.nearByThreeList;
						var tpages = res.data.page.tCount;
						var pages = info.length / 20;
						var isInt = tpages / (that.pageIndex * 20);
						that.loadmore = pages == 1 && isInt != 1 ? true : false;

						if (that.pageIndex > 1) {
							that.info = that.info.concat(info);
						} else {
							that.info = info;
						}

						for (var i = 0; i < info.length; i++) {
							var labels = info[i].baseSecondCategory;
							var label = labels.split(',');
							that.info[i].baseSecondCategory = label;
						}
						that.$apply();
					}
				}
			});
		}
	}]);

	return comRoundCom;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(comRoundCom , 'pages/comRoundCom'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,