'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var findmeSearch = function (_wepy$component) {
    _inherits(findmeSearch, _wepy$component);

    function findmeSearch() {
        var _ref, _this$data;

        var _temp, _this, _ret;

        _classCallCheck(this, findmeSearch);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = findmeSearch.__proto__ || Object.getPrototypeOf(findmeSearch)).call.apply(_ref, [this].concat(args))), _this), _this.events = {
            'selectCity': function selectCity($event) {
                _this.seleCity = $event;
            }
        }, _this.data = (_this$data = {
            seleCity: "全国",
            show_hide: true,
            searchvalue: '',
            filterTabs: ['原料', '改性料', '辅料', '回料'],
            classify: "分类",
            autoarrange: "智能排序",
            autoOrder: "",
            autoarrangeItem: ['按最新报价', '按浏览次数', '按联系人数'],
            secondcateindex: -1,
            showfilter: false,
            selectItem: 0,
            filterdata: {}, //筛选条件数据
            showfilterindex: null,
            selectType: "原料", //分类索引
            sType: ""
        }, _defineProperty(_this$data, 'autoOrder', ""), _defineProperty(_this$data, 'sKey', ""), _defineProperty(_this$data, 'deliveryPlace', ""), _defineProperty(_this$data, 'cateid', 0), _defineProperty(_this$data, 'sortsArr', []), _this$data), _this.methods = {
            chooseCity: function chooseCity() {
                wx.navigateTo({
                    url: 'cityposition'
                });
            },

            //搜索框设置
            hideSearchIcon: function hideSearchIcon(e) {
                this.searchvalue = e.detail.value;
                if (e.detail.value != "") {
                    this.show_hide = false;
                } else {
                    this.show_hide = true;
                }
            },
            showSearchIcon: function showSearchIcon(e) {
                if (e.detail.value == "") {
                    this.show_hide = true;
                    this.sKey = "";
                    this.$emit('sendFilterDatas', {
                        searchKey: this.sKey,
                        pType: this.selectType,
                        seriesType: this.sType,
                        order: this.autoOrder
                    });
                }
            },
            gotoquery: function gotoquery(e) {
                this.sKey = "";
                this.sKey = e.detail.value.trim();
                if (this.sKey == "" || this.sKey == null) return false;
                this.$emit('sendFilterDatas', {
                    searchKey: this.sKey,
                    pType: this.selectType,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
            },

            //选项卡
            selectTab: function selectTab(e) {
                this.sKey = "";
                this.searchvalue = "";
                this.show_hide = true;
                this.sType = "全部";
                this.classify = "分类";
                this.autoOrder = "";
                this.autoarrange = "智能排序";
                this.secondcateindex = -1;
                this.cateindex = -1;
                this.showfilter = false;
                this.showfilterindex = null;
                this.selectItem = e.target.dataset.i;
                this.$emit('some-event', e.target.dataset.i);
                this.selectType = e.target.dataset.type;
                this.fetchFilterData();
                this.$emit('sendFilterDatas', {
                    searchKey: this.sKey,
                    pType: this.selectType,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
            },

            //下拉筛选
            setFilterPanel: function setFilterPanel(e) {
                this.showfilter = !this.showfilter;
                if (this.showfilter) {
                    this.showfilterindex = e.target.dataset.findex;
                } else {
                    this.showfilterindex = 0;
                }
            },
            selectMaterialCate: function selectMaterialCate(e) {
                //分类筛选
                this.cateindex = e.currentTarget.dataset.cateindex;
                this.cateid = e.currentTarget.dataset.cateid;
                this.sType = e.currentTarget.dataset.sorts;
                this.classify = e.currentTarget.dataset.sorts;
                this.showfilter = false;
                this.showfilterindex = null;
                this.$emit('sendFilterDatas', {
                    searchKey: this.sKey,
                    pType: this.selectType,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
            },
            selectSecondCate: function selectSecondCate(e) {
                this.secondcateindex = e.target.dataset.index;
                this.autoOrder = e.target.dataset.autosort;
                this.autoarrange = e.target.dataset.autosort;
                this.showfilter = false;
                this.showfilterindex = null;

                this.$emit('sendFilterDatas', {
                    searchKey: this.sKey,
                    pType: this.selectType,
                    seriesType: this.sType,
                    order: this.autoOrder
                });
            },
            saoyisao: function saoyisao() {
                wx.scanCode({
                    success: function success(res) {
                        wx.navigateTo({
                            url: 'bookDetail?isbn=' + res.result
                        });
                    }
                });
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(findmeSearch, [{
        key: 'onLoad',
        value: function onLoad() {
            this.$emit('indexLoadComplete', true);
            this.fetchFilterData();
        }
    }, {
        key: 'fetchFilterData',
        value: function fetchFilterData() {
            //获取筛选条件
            var that = this;
            _wepy2.default.request({
                url: _config.api.common.productCates.url,
                method: _config.api.common.productCates.method,
                data: {
                    'productType': that.selectType
                },
                success: function success(res) {
                    that.sortsArr = res.data.body.seriesTypeList;
                }
            });
        }
    }]);

    return findmeSearch;
}(_wepy2.default.component);

exports.default = findmeSearch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,