'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var deblockingConnection = function (_wepy$page) {
	_inherits(deblockingConnection, _wepy$page);

	function deblockingConnection() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, deblockingConnection);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = deblockingConnection.__proto__ || Object.getPrototypeOf(deblockingConnection)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
			'navigationBarTitleText': '解锁的人脉',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this.data = {
			loginUId: -1,
			showModal: false,
			disLock: [],
			userTel: '',
			scrollWrapHeight: 0,
			pageIndex: 1,
			loadmore: true
		}, _this.methods = {
			scrollLoading: function scrollLoading() {
				if (this.loadmore) {
					this.pageIndex++;
					if (this.pageIndex < 6) {
						this.getDeblock();
					} else {
						this.loadmore = false;
						wx.showModal({
							title: '',
							content: '更多内容请前往按搜app',
							showCancel: true,
							confirmText: '确定',
							confirmColor: '#0092ff',
							success: function success(res) {
								if (res.confirm) {
									if (wx.getSystemInfoSync().system.toLowerCase().indexOf('andr') != -1) {
										console.log('android');
										wx.navigateTo({
											url: 'downLoad'
										});
									} else {
										console.log('iso');
										wx.navigateTo({
											url: 'downLoad'
										});
									}
								} else if (res.cancel) {
									console.log('用户点击取消');
								}
							}
						});
					}
				} else {
					return false;
				}
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(deblockingConnection, [{
		key: 'onShow',
		value: function onShow() {
			this.pageIndex = 1;
		}
	}, {
		key: 'onLoad',
		value: function onLoad(option) {
			this.loginUId = option.userId;
			this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight;
			this.getDeblock();
		}
	}, {
		key: 'showDialogBtn',
		value: function showDialogBtn(e) {
			this.showModal = true;
			var tel = e.currentTarget.dataset.usertel;
			this.userTel = tel;
			console.log(this.userTel);
		}
	}, {
		key: 'preventTouchMove',
		value: function preventTouchMove() {} // 空方法拦截滚动穿透

	}, {
		key: 'hideModal',
		value: function hideModal() {
			this.showModal = false;
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			this.hideModal();
		}
	}, {
		key: 'onConfirm',
		value: function onConfirm() {
			wx.makePhoneCall({
				phoneNumber: this.userTel
			});
			this.hideModal();
		}
	}, {
		key: 'getDeblock',
		value: function getDeblock() {
			var that = this;
			var pageSize = 20;
			wx.request({
				url: _config.api.my.myLocktask.url,
				method: _config.api.my.myLocktask.method,
				data: {
					userId: that.loginUId,
					pageInfo2: {
						pIndex: that.pageIndex,
						pSize: pageSize
					}
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						var disLocks = res.data.body;
						var tpages = res.data.page.tCount;
						var pages = disLocks.length / 20;
						var isInt = tpages / (that.pageIndex * 20);
						that.loadmore = pages == 1 && isInt != 1 ? true : false;

						if (that.pageIndex > 1) {
							that.disLock = that.disLock.concat(disLocks);
						} else {
							that.disLock = disLocks;
						}
						that.$apply();
						wx.hideLoading();
					}
				}
			});
		}
	}]);

	return deblockingConnection;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(deblockingConnection , 'pages/deblockingConnection'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,