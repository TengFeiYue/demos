'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

var _qqmapWxJssdk = require('./../utils/qqmap-wx-jssdk.js');

var _qqmapWxJssdk2 = _interopRequireDefault(_qqmapWxJssdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var materialDetail = function (_wepy$page) {
    _inherits(materialDetail, _wepy$page);

    function materialDetail() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, materialDetail);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = materialDetail.__proto__ || Object.getPrototypeOf(materialDetail)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
            'navigationBarTitleText': '材料详情',
            'navigationBarTextStyle': '#FFFFFF',
            'navigationBarBackgroundColor': '#0386FF'
        }, _this.data = {
            opa: false,
            tip: "",
            currentCityName: "",
            productDto: {},
            userDto: {},
            MaterialDetailList: [],
            loadNum: 0,
            wait: true,
            loadmore: true,
            scrolltop: 0, //滚动位置
            scrollHeight: 0,
            pageIndex: 1, //分页
            showTopBtn: false,
            productId: -1,
            loginUId: -1,
            isCollect: false,
            hasCollected: false
        }, _this.methods = {
            collection: function collection() {
                if (!this.loginUId) {
                    this.warningTip({
                        msg: '请先登录！'
                    });
                    return;
                }
                var that = this;
                console.log(that.productId);
                _wepy2.default.request({
                    url: _config.api.common.collection.url,
                    method: _config.api.common.collection.method,
                    data: {
                        'loginUserId': that.loginUId,
                        'collectId': that.productId,
                        'type': 1
                    },
                    success: function success(res) {
                        var collectRes = res.data;
                        if (collectRes.isSuccess == 1) {
                            that.hasCollected = true;
                            wx.showToast({
                                title: collectRes.errorMsg,
                                icon: 'success'
                            });
                        } else if (collectRes.isSuccess == 0) {
                            that.warningTip({
                                msg: collectRes.errorMsg
                            });
                        }
                        that.$apply();
                    }
                });
            },
            startCall: function startCall(e) {
                //一键拨号
                var telNumber = e.currentTarget.dataset.tel;
                var toUId = e.currentTarget.dataset.uid;
                wx.makePhoneCall({
                    phoneNumber: telNumber
                });
                var that = this;
                _wepy2.default.request({
                    url: _config.api.common.callLinkers.url,
                    method: _config.api.common.callLinkers.method,
                    data: {
                        'toUserId': toUId,
                        'userId': that.loginUId
                    },
                    success: function success(res) {
                        console.log(res);
                    }
                });
            },
            toOtherPriceInfo: function toOtherPriceInfo(e) {
                var productsId = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url: 'materialDetail?proId=' + productsId
                });
            },
            toMarketingDetail: function toMarketingDetail(e) {
                var userId = e.currentTarget.dataset.uid;
                wx.navigateTo({
                    url: 'marketingDetail?userId=' + userId
                });
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(materialDetail, [{
        key: 'onLoad',
        value: function onLoad(e) {
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.loginUId = antsooUserInfo.userId;
            this.productId = e.proId;
            this.scrollHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 160;
            console.log('height' + this.scrollHeight);
            this.fetchMaterialDetailData();
            var that = this;
            var qqmapsdk = new _qqmapWxJssdk2.default({
                key: 'BFYBZ-FF73Q-FNK5G-GUK2J-5DUSO-6QBDJ' // 必填
            });
            wx.getLocation({
                type: 'wgs84',
                success: function success(res) {
                    qqmapsdk.reverseGeocoder({
                        location: {
                            latitude: res.latitude,
                            longitude: res.longitude
                        },
                        success: function success(addressRes) {
                            that.currentCityName = addressRes.result.address_component.city;
                            that.$apply();
                        }
                    });
                }
            });
        }
    }, {
        key: 'warningTip',
        value: function warningTip(obj) {
            this.opa = true;
            this.tip = obj.msg;
            this.$apply();
            var that = this;
            setTimeout(function () {
                that.opa = false;
                that.$apply();
            }, 800);
        }
    }, {
        key: 'fetchMaterialDetailData',
        value: function fetchMaterialDetailData() {
            //获取材料详情列表
            wx.showLoading({
                title: '加载中'
            });
            var that = this;
            var pageSize = 20;
            _wepy2.default.request({
                url: _config.api.product.otherMaterialDetailLists.url,
                method: _config.api.product.otherMaterialDetailLists.method,
                data: {
                    'dailyBaseProductId': that.productId,
                    'userId': that.loginUId,
                    'pageInfo2': {
                        'pSize': pageSize,
                        'pIndex': that.pageIndex
                    }
                },
                success: function success(res) {
                    that.hasCollected = res.data.body.isCollected;
                    that.isCollect = res.data.body.isCollected;
                    that.productDto = res.data.body.productDto;
                    that.userDto = res.data.body.userDto;
                    var materialDetailData = res.data.body.otherProductList;
                    that.MaterialDetailList = materialDetailData;

                    that.$apply();
                    wx.hideLoading();
                }
            });
        }
    }]);

    return materialDetail;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(materialDetail , 'pages/materialDetail'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,