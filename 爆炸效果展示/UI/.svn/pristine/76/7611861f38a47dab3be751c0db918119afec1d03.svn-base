'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var personalInfo = function (_wepy$page) {
    _inherits(personalInfo, _wepy$page);

    function personalInfo() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, personalInfo);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = personalInfo.__proto__ || Object.getPrototypeOf(personalInfo)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
            'navigationBarTitleText': '个人认证',
            'navigationBarTextStyle': '#FFFFFF',
            'navigationBarBackgroundColor': '#0386FF'
        }, _this.components = {}, _this.data = {
            isUpload: -1,
            upNameCard: "../resources/img/camera.png",
            opa: false,
            tip: "",
            loginUId: -1,
            pName: '',
            cardPosition: '',
            pEmail: '',
            pCompanyName: '',
            pCompanybrief: '',
            companyType: '',
            runingWay: '',
            companyP: '',
            companyC: '',
            companyA: '',
            addressDetail: '',
            showSeachList: false,
            filteredName: [],
            searchVal: "",
            selectIndex: -1,
            actionSheetHidden: true,
            actionSheetItems: [],
            region: [],
            isOldUser: false,
            isChange: true,
            priseId: -1,
            fromModels: false,
            blurVal: ""
        }, _this.methods = {
            bindRegionChange: function bindRegionChange(e) {
                this.region = e.detail.value;
                this.companyP = e.detail.value[0];
                this.companyC = e.detail.value[1];
                this.companyA = e.detail.value[2];
            },
            toConfirmInfo: function toConfirmInfo() {
                wx.navigateTo({
                    url: 'personInfoFill'
                });
            },
            upLoadCard: function upLoadCard() {
                this.isUpload = 8;
                var that = this;
                wx.chooseImage({
                    count: 1, // 默认9
                    sizeType: ['original', 'compressed'],
                    sourceType: ['album', 'camera'],
                    success: function success(res) {
                        that.uploadImg = res.tempFilePaths[0];
                        if (res.tempFilePaths.length > 0) {
                            wx.saveFile({
                                tempFilePath: res.tempFilePaths[0],
                                success: function success(res) {
                                    that.upNameCard = res.savedFilePath;
                                    that.$apply();
                                }
                            });
                        }
                        wx.getSavedFileList({
                            success: function success(res) {
                                console.log(res);
                                for (var i = 0; i < res.fileList.length - 1; i++) {
                                    for (var j = 0; j < res.fileList.length - 1 - i; j++) {
                                        if (res.fileList[j].createTime > res.fileList[j + 1].createTime) {
                                            var tem = res.fileList[j];
                                            res.fileList[j] = res.fileList[j + 1];
                                            res.fileList[j + 1] = tem;
                                        }
                                    }
                                }
                                if (res.fileList.length > 5) {
                                    wx.removeSavedFile({
                                        filePath: res.fileList[0].filePath,
                                        complete: function complete(res) {
                                            console.log(res);
                                        }
                                    });
                                }
                                that.pName = "";
                                that.cardPosition = "";
                                that.pEmail = "";
                                that.pCompanyName = "";
                                that.companyC = "";
                                that.addressDetail = "";
                                that.upNameCard = res.fileList[res.fileList.length - 1].filePath;
                                wx.uploadFile({
                                    url: _config.api.common.nameCard.url, //仅为示例，非真实的接口地址
                                    filePath: that.upNameCard,
                                    name: 'nameCard',
                                    header: {
                                        'content-type': 'multipart/form-data'
                                    },
                                    success: function success(res) {
                                        var getCardInfo = JSON.parse(res.data).body;
                                        that.pName = getCardInfo.formatted_name[0].item;
                                        that.cardPosition = getCardInfo.title[0].item;
                                        that.pEmail = getCardInfo.email[0].item;
                                        that.pCompanyName = getCardInfo.organization[0].item.name;
                                        that.companyC = getCardInfo.address[0].item.locality;
                                        that.addressDetail = getCardInfo.address[0].item.street;
                                        that.$apply();
                                    }
                                });
                                that.$apply();
                            }
                        });
                        that.$apply();
                    }
                });
            },
            filterMname: function filterMname(e) {
                //筛选企业名称
                if (e.detail.value.length == 0) {
                    this.showSeachList = false;
                } else {
                    this.showSeachList = true;
                }
                var that = this;
                _wepy2.default.request({
                    url: _config.api.common.getCompanyNameData.url,
                    method: _config.api.common.getCompanyNameData.method,
                    data: {
                        'searchKey': e.detail.value
                    },
                    success: function success(res) {
                        that.filteredName = res.data.body;
                        that.$apply();
                    }
                });
            },
            selectPname: function selectPname(e) {
                this.selectIndex = e.currentTarget.dataset.i;
                this.pCompanyName = e.currentTarget.dataset.v;
                this.showSeachList = false;
                var that = this;
                _wepy2.default.request({
                    url: _config.api.common.getCompanyNameData.url,
                    method: _config.api.common.getCompanyNameData.method,
                    data: {
                        'searchKey': that.pCompanyName
                    },
                    success: function success(res) {
                        console.log(res);
                        that.priseId = res.data.body[0].enterpriseId;
                        console.log(that.priseId);
                        if (that.priseId > 0) {
                            that.isChange = true;
                        } else if (that.priseId < 0 || that.priseId == "") {
                            that.isChange = false;
                        }
                        that.addressDetail = res.data.body[0].address;
                        that.runingWay = res.data.body[0].businessMode;
                        that.companyType = res.data.body[0].type;
                        that.companyP = res.data.body[0].provinceName;
                        that.companyC = res.data.body[0].cityName;
                        that.companyA = res.data.body[0].districtName;
                        that.pCompanybrief = res.data.body[0].name.slice(0, 5);
                        that.blurVal = that.pCompanyName;
                        that.$apply();
                    }
                });
            },
            blurEvent: function blurEvent(e) {
                this.blurVal = e.detail.value;
            },
            hideSearchList: function hideSearchList() {
                //if(this.blurVal==""||this.blurVal==null) this.blurVal=this.pCompanyName;
                console.log(this.blurVal);
                this.showSeachList = false;
                if (this.blurVal != this.pCompanyName) {
                    this.priseId = -1;
                    this.isChange = false;
                } else {
                    this.priseId = 2;
                    this.isChange = true;
                }
                /*if(this.priseId>0){
                      this.isChange=false;
                }else if(this.priseId<0){
                    this.isChange=true;
                }*/
                this.$apply();
            },
            listenerButton: function listenerButton() {
                this.actionSheetHidden = !this.actionSheetHidden;
            },
            listenerActionSheet: function listenerActionSheet() {
                this.actionSheetHidden = !this.actionSheetHidden;
            },
            selModel: function selModel(e) {
                //选择经营模式
                this.runingWay = e.currentTarget.dataset.v;
                this.actionSheetHidden = !this.actionSheetHidden;
            },
            toChooseModel: function toChooseModel() {
                //选择企业类型
                wx.navigateTo({
                    url: 'companyMode'
                });
            },
            formSubmit: function formSubmit(e) {
                if (!this.loginUId) {
                    wx.navigateTo({
                        url: 'login?fromPage=personalInfoFill'
                    });
                    return;
                }
                if (this.upNameCard == "../resources/img/camera.png" || this.upNameCard == null) {
                    this.warningTip({
                        msg: '名片不能为空！'
                    });
                    return;
                }
                if (e.detail.value.pName == "") {
                    this.warningTip({
                        msg: '姓名不能为空！'
                    });
                    return;
                }
                if (e.detail.value.pEmail == "") {
                    this.warningTip({
                        msg: '邮箱不能为空！'
                    });
                    return;
                }
                if (e.detail.value.cardPosition == "") {
                    this.warningTip({
                        msg: '职位不能为空！'
                    });
                    return;
                }
                if (e.detail.value.pCompanyName == "") {
                    this.warningTip({
                        msg: '企业名称不能为空！'
                    });
                    return;
                }
                if (e.detail.value.pCompanybrief == "") {
                    this.warningTip({
                        msg: '企业简称不能为空！'
                    });
                    return;
                }
                if (e.detail.value.companyType == "") {
                    this.warningTip({
                        msg: '企业类型不能为空！'
                    });
                    return;
                }
                if (e.detail.value.runingWay == "") {
                    this.warningTip({
                        msg: '经营模式不能为空！'
                    });
                    return;
                }
                if (e.detail.value.companyC == "") {
                    this.warningTip({
                        msg: '请选择企业地区！'
                    });
                    return;
                }
                if (e.detail.value.addressDetail == "") {
                    this.warningTip({
                        msg: '详细地址不能为空！'
                    });
                    return;
                }

                var that = this;
                var cardInfos = e.detail.value;
                console.log(cardInfos);
                wx.getSavedFileList({
                    success: function success(res) {
                        console.log(res);
                        for (var i = 0; i < res.fileList.length - 1; i++) {
                            for (var j = 0; j < res.fileList.length - 1 - i; j++) {
                                if (res.fileList[j].createTime > res.fileList[j + 1].createTime) {
                                    var tem = res.fileList[j];
                                    res.fileList[j] = res.fileList[j + 1];
                                    res.fileList[j + 1] = tem;
                                }
                            }
                        }
                        if (res.fileList.length > 5) {
                            wx.removeSavedFile({
                                filePath: res.fileList[0].filePath,
                                complete: function complete(res) {
                                    console.log(res);
                                }
                            });
                        }
                        that.upNameCard = res.fileList[res.fileList.length - 1].filePath;
                        that.$apply();
                    }
                });
                console.log(that.upNameCard);
                console.log(this.isUpload);
                if (this.isUpload == 8) {
                    wx.uploadFile({
                        url: _config.api.common.confirmInfoData.url,
                        filePath: that.upNameCard,
                        name: 'nameCardPhoto',
                        header: {
                            'content-type': 'multipart/form-data'
                        },
                        formData: {
                            'userId': that.loginUId,
                            'name': cardInfos.pName,
                            'position': cardInfos.cardPosition,
                            'email': cardInfos.pEmail,
                            'companyName': cardInfos.pCompanyName,
                            'companySimpleDesc': cardInfos.pCompanybrief,
                            'opeIndustry': cardInfos.companyType,
                            'businessMode': cardInfos.runingWay,
                            'province': that.companyP,
                            'city': that.companyC,
                            'area': that.companyA,
                            'address': cardInfos.addressDetail
                        },
                        success: function success(res) {
                            var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
                            if (msg.isSuccess == 1) {
                                wx.redirectTo({
                                    url: 'personalInfo?state=confirm'
                                });
                            } else {
                                that.warningTip({
                                    msg: msg.errorMsg
                                });
                                return;
                            }
                        }
                    });
                } else {
                    _wepy2.default.request({
                        url: _config.api.common.confirmInfoData.url,
                        method: 'POST',
                        header: {
                            "Content-Type": "application/x-www-form-urlencoded"
                        },
                        data: {
                            'userId': that.loginUId,
                            'name': cardInfos.pName,
                            'position': cardInfos.cardPosition,
                            'email': cardInfos.pEmail,
                            'companyName': cardInfos.pCompanyName,
                            'companySimpleDesc': cardInfos.pCompanybrief,
                            'opeIndustry': cardInfos.companyType,
                            'businessMode': cardInfos.runingWay,
                            'province': that.companyP,
                            'city': that.companyC,
                            'area': that.companyA,
                            'address': cardInfos.addressDetail
                        },
                        success: function success(res) {
                            var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
                            if (msg.isSuccess == 1) {
                                wx.redirectTo({
                                    url: 'personalInfo?state=confirm'
                                });
                            } else {
                                that.warningTip({
                                    msg: msg.errorMsg
                                });
                                return;
                            }
                        }
                    });
                }
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(personalInfo, [{
        key: 'onShow',
        value: function onShow() {
            var pages = this.getCurrentPages();
            var currPage = pages[pages.length - 1]; //selectTypes
            var selectedType = currPage.data.seleType;
            var selectedArr = "";
            for (var key in selectedType) {
                selectedArr += selectedType[key] + ',';
            }
            this.companyType = selectedArr.substring(0, selectedArr.length - 1) == "" ? this.companyType : selectedArr.substring(0, selectedArr.length - 1);
        }
    }, {
        key: 'onLoad',
        value: function onLoad(e) {
            var aaa = e.saved;
            var confirmInfos = _wepy2.default.getStorageSync("confirmInfos");
            console.log(confirmInfos);
            this.priseId = parseInt(e.enterpriceId);
            if (this.priseId > 0) {
                this.isChange = true;
            }
            this.upNameCard = e.nameCardUrl == 'null' || e.nameCardUrl == null ? '../resources/img/camera.png' : e.nameCardUrl;
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.loginUId = antsooUserInfo.userId;
            var oldUser = antsooUserInfo.user;
            if (oldUser) {
                this.isOldUser = true;
            }
            if (aaa == "true") {
                this.pName = confirmInfos.name;
                this.cardPosition = confirmInfos.position;
                this.pEmail = confirmInfos.email;
                this.pCompanyName = confirmInfos.companyName;
                this.pCompanybrief = confirmInfos.companySimpleDesc;
                this.companyType = confirmInfos.opeIndustry;
                this.runingWay = confirmInfos.businessMode;
                this.companyP = confirmInfos.province;
                this.companyC = confirmInfos.city;
                this.companyA = confirmInfos.area;
                this.addressDetail = confirmInfos.address;
            } else if (aaa == "false") {
                this.fetchPersonalInfoData();
            }
            this.fetchmodelData();
            this.$apply();
            aaa = "false";
        }
    }, {
        key: 'warningTip',
        value: function warningTip(obj) {
            this.opa = true;
            this.tip = obj.msg;
            this.$apply();
            var that = this;
            setTimeout(function () {
                that.opa = false;
                that.$apply();
            }, 800);
        }
    }, {
        key: 'fetchPersonalInfoData',
        value: function fetchPersonalInfoData() {
            var that = this;
            _wepy2.default.request({
                url: _config.api.common.getPersonalInfoData.url,
                method: _config.api.common.getPersonalInfoData.method,
                data: {
                    'userId': that.loginUId
                },
                success: function success(res) {
                    var getPersonalInfoDatas = res.data.body;
                    console.log(res);
                    if (getPersonalInfoDatas.enterpriseId > 0) {
                        that.isChange = false;
                    }
                    var getPersonalInfoDatas = res.data.body;
                    that.pName = getPersonalInfoDatas.name;
                    that.cardPosition = getPersonalInfoDatas.position;
                    that.pEmail = getPersonalInfoDatas.email;
                    that.pCompanyName = getPersonalInfoDatas.companyName;
                    that.companyP = getPersonalInfoDatas.province;
                    that.companyC = getPersonalInfoDatas.city;
                    that.companyA = getPersonalInfoDatas.area;
                    that.companyType = getPersonalInfoDatas.businessMode;
                    that.runingWay = getPersonalInfoDatas.opeIndustry;
                    that.addressDetail = getPersonalInfoDatas.address;
                    that.pCompanybrief = getPersonalInfoDatas.companySimpleDesc;
                    that.upNameCard = getPersonalInfoDatas.nameCardUrl == null ? '../resources/img/camera.png' : getPersonalInfoDatas.nameCardUrl;
                    that.$apply();
                }
            });
        }
    }, {
        key: 'fetchmodelData',
        value: function fetchmodelData() {
            var that = this;
            _wepy2.default.request({
                url: _config.api.common.getmodelData.url,
                method: _config.api.common.getmodelData.method,
                success: function success(res) {
                    var runningWay = res.data.body.businessModeList;
                    var modelArr = [];
                    for (var i = 0; i < runningWay.length; i++) {
                        modelArr.push(runningWay[i].value);
                    }
                    that.actionSheetItems = modelArr;
                    that.$apply();
                }
            });
        }
    }, {
        key: 'hideSearchList',
        value: function hideSearchList() {
            if (this.blurVal == "" || this.blurVal == null) this.blurVal = this.pCompanyName;
            console.log(this.blurVal);
            this.showSeachList = false;
            if (this.blurVal != this.pCompanyName) {
                this.priseId = -1;
            } else {
                this.priseId = 2;
            }
            if (this.priseId > 0) {
                this.isChange = false;
            } else if (this.priseId < 0) {
                this.isChange = true;
            }
            this.$apply();
        }
    }]);

    return personalInfo;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(personalInfo , 'pages/personInfoFill'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,