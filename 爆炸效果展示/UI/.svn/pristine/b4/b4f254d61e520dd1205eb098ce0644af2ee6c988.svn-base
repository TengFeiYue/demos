'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var antsooConfirm = function (_wepy$page) {
	_inherits(antsooConfirm, _wepy$page);

	function antsooConfirm() {
		var _ref, _this$data;

		var _temp, _this, _ret;

		_classCallCheck(this, antsooConfirm);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = antsooConfirm.__proto__ || Object.getPrototypeOf(antsooConfirm)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
			'navigationBarTitleText': '俺搜认证',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this.components = {}, _this.data = (_this$data = {
			alertModel: -1,
			isAudit: -1,
			isUploadLisence: -1,
			isUpload: -1,
			loginUId: -1,
			opa: false,
			tip: "",
			verifyingOperateLayer: false,
			actionSheetHidden: true,
			actionSheetItems: [],
			runingWay: '',
			region: [],
			companyP: '',
			companyC: '',
			companyA: '',
			pName: "",
			cardPosition: "",
			pEmail: "",
			pCompanyName: "",
			companyType: ""
		}, _defineProperty(_this$data, 'runingWay', ""), _defineProperty(_this$data, 'addressDetail', ""), _defineProperty(_this$data, 'upNameCard', '../resources/icons/cameraConfirm.png'), _defineProperty(_this$data, 'lisence', '../resources/icons/cameraConfirm.png'), _defineProperty(_this$data, 'hasManageRights', 0), _defineProperty(_this$data, 'isAdmit', 0), _defineProperty(_this$data, 'showUploadLisence', false), _defineProperty(_this$data, 'applyType', 1), _defineProperty(_this$data, 'rejectReason', ''), _this$data), _this.events = {}, _this.methods = {
			toChooseCom: function toChooseCom() {
				if (this.isAudit == 0 || this.isAudit == 1) {
					return;
				}
				wx.navigateTo({
					url: 'companyName?comName=' + this.pCompanyName
				});
			},
			toCompanyType: function toCompanyType() {
				if (this.hasManageRights > 0) {
					return;
				}
				wx.navigateTo({
					url: 'companyType?selModel=' + this.companyType
				});
			},
			upLoadCard: function upLoadCard() {
				//上传名片
				var that = this;
				wx.chooseImage({
					count: 1, // 默认9
					sizeType: ['original', 'compressed'],
					sourceType: ['album', 'camera'],
					success: function success(res) {
						that.isUpload = 8;
						that.uploadImg = res.tempFilePaths[0];
						if (res.tempFilePaths.length > 0) {
							wx.saveFile({
								tempFilePath: res.tempFilePaths[0],
								success: function success(res) {
									that.upNameCard = res.savedFilePath;
									that.$apply();
								}
							});
						}
						wx.getSavedFileList({
							success: function success(res) {
								console.log(res);
								for (var i = 0; i < res.fileList.length - 1; i++) {
									for (var j = 0; j < res.fileList.length - 1 - i; j++) {
										if (res.fileList[j].createTime > res.fileList[j + 1].createTime) {
											var tem = res.fileList[j];
											res.fileList[j] = res.fileList[j + 1];
											res.fileList[j + 1] = tem;
										}
									}
								}
								if (res.fileList.length > 5) {
									wx.removeSavedFile({
										filePath: res.fileList[0].filePath,
										complete: function complete(res) {
											console.log(res);
										}
									});
								}
								that.pName = "";
								that.cardPosition = "";
								that.pEmail = "";
								that.pCompanyName = "";
								that.companyC = "";
								that.addressDetail = "";
								that.upNameCard = res.fileList[res.fileList.length - 1].filePath;
								wx.uploadFile({
									url: _config.api.my.cardRecognize.url, //仅为示例，非真实的接口地址
									filePath: that.upNameCard,
									name: 'userCardUrl',
									header: {
										'content-type': 'multipart/form-data'
									},
									success: function success(res) {
										console.log(res);
										var getCardInfo = JSON.parse(res.data).body;
										that.pName = getCardInfo.formatted_name[0].item;
										that.cardPosition = getCardInfo.title[0].item;
										that.pEmail = getCardInfo.email[0].item;
										that.pCompanyName = getCardInfo.organization[0].item.name;
										that.companyC = getCardInfo.address[0].item.locality;
										that.companyP = "";
										that.companyA = "";
										that.addressDetail = getCardInfo.address[0].item.street;
										if (that.pCompanyName) {
											that.hasCompany();
										}
										that.$apply();
									}
								});
								that.$apply();
							}
						});
						that.$apply();
					}
				});
			},
			switch1Change: function switch1Change(e) {
				//switch按钮
				if (e.detail.value) {
					this.showUploadLisence = true;
					this.applyType = 2;
					console.log(this.lisence);
					this.lisence = this.lisence == '' || this.lisence == null || this.lisence == 'http://106.14.92.11:8099/images/cameraConfirm.png' ? "../resources/icons/cameraConfirm.png" : this.lisence;
				} else {
					this.showUploadLisence = false;
					this.applyType = 1;
				}
			},
			upLoadLisence: function upLoadLisence() {
				//上传营业执照
				this.alertModel = 8;
				var that = this;
				wx.chooseImage({
					count: 1, // 默认9
					sizeType: ['original', 'compressed'],
					sourceType: ['album', 'camera'],
					success: function success(res) {
						that.isUploadLisence = 9;
						that.uploadImg = res.tempFilePaths[0];
						if (res.tempFilePaths.length > 0) {
							wx.saveFile({
								tempFilePath: res.tempFilePaths[0],
								success: function success(res) {
									that.lisence = res.savedFilePath;
									that.$apply();
								}
							});
						}
						wx.getSavedFileList({
							success: function success(res) {
								console.log(res);
								for (var i = 0; i < res.fileList.length - 1; i++) {
									for (var j = 0; j < res.fileList.length - 1 - i; j++) {
										if (res.fileList[j].createTime > res.fileList[j + 1].createTime) {
											var tem = res.fileList[j];
											res.fileList[j] = res.fileList[j + 1];
											res.fileList[j + 1] = tem;
										}
									}
								}
								if (res.fileList.length > 5) {
									wx.removeSavedFile({
										filePath: res.fileList[0].filePath,
										complete: function complete(res) {
											console.log(res);
										}
									});
								}
								that.lisence = res.fileList[res.fileList.length - 1].filePath;
								that.$apply();
							}
						});
						that.$apply();
					}
				});
			},
			listenerButton: function listenerButton() {
				this.actionSheetHidden = !this.actionSheetHidden;
			},
			listenerActionSheet: function listenerActionSheet() {
				this.actionSheetHidden = !this.actionSheetHidden;
			},
			selModel: function selModel(e) {
				//选择经营模式
				this.runingWay = e.currentTarget.dataset.v;
				this.actionSheetHidden = !this.actionSheetHidden;
			},
			toChooseModel: function toChooseModel() {
				//选择企业类型
				wx.navigateTo({
					url: 'companyMode'
				});
			},
			bindRegionChange: function bindRegionChange(e) {
				this.region = e.detail.value;
				this.companyP = e.detail.value[0];
				this.companyC = e.detail.value[1];
				this.companyA = e.detail.value[2];
			},
			formSubmit: function formSubmit(e) {
				var that = this;
				if (!this.loginUId) {
					wx.navigateTo({
						url: 'login?fromPage=antsooConfirm'
					});
					return;
				}
				if (this.upNameCard == "../resources/icons/cameraConfirm.png" || this.upNameCard == null) {
					this.warningTip({
						msg: '名片不能为空！'
					});
					return;
				}
				if (e.detail.value.pName == "") {
					this.warningTip({
						msg: '姓名不能为空！'
					});
					return;
				}
				if (e.detail.value.pEmail == "") {
					this.warningTip({
						msg: '邮箱不能为空！'
					});
					return;
				}
				if (e.detail.value.cardPosition == "") {
					this.warningTip({
						msg: '职位不能为空！'
					});
					return;
				}
				if (e.detail.value.pCompanyName == "") {
					this.warningTip({
						msg: '企业名称不能为空！'
					});
					return;
				}
				if (e.detail.value.companyType == "") {
					this.warningTip({
						msg: '企业类型不能为空！'
					});
					return;
				}
				if (e.detail.value.runingWay == "") {
					this.warningTip({
						msg: '经营模式不能为空！'
					});
					return;
				}
				if (e.detail.value.companyC == "") {
					this.warningTip({
						msg: '请选择企业地区！'
					});
					return;
				}
				if (e.detail.value.addressDetail == "") {
					this.warningTip({
						msg: '详细地址不能为空！'
					});
					return;
				}
				if (this.applyType == 2 && (this.lisence == '../resources/icons/cameraConfirm.png' || this.lisence == null || this.lisence == '')) {
					this.warningTip({
						msg: '营业执照不能为空！'
					});
					return;
				}
				var cardInfos = e.detail.value;
				_wepy2.default.request({
					url: _config.api.my.myPersonalInfo.url,
					method: 'POST',
					data: {
						'userId': that.loginUId,
						'name': cardInfos.pName,
						'position': cardInfos.cardPosition,
						'email': cardInfos.pEmail,
						'companyName': cardInfos.pCompanyName,
						'opeIndustry': cardInfos.companyType,
						'businessMode': cardInfos.runingWay,
						'province': that.companyP,
						'city': that.companyC,
						'area': that.companyA,
						'address': cardInfos.addressDetail
					},
					success: function success(res) {
						var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
						console.log(msg);
						if (msg.isSuccess == 1) {
							if (that.isUpload == 8) {
								wx.uploadFile({
									url: _config.api.my.confirmSubmit.url, //仅为示例，非真实的接口地址
									filePath: that.upNameCard,
									name: 'photo',
									header: {
										'content-type': 'multipart/form-data'
									},
									formData: {
										'userId': that.loginUId,
										'isCardFile': 1
									},
									success: function success(res) {
										var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
										var backCardUrl = msg.body.imgUrl;
										if (that.isUploadLisence == 9) {
											wx.uploadFile({
												url: _config.api.my.confirmSubmit.url, //仅为示例，非真实的接口地址
												filePath: that.lisence,
												name: 'photo',
												header: {
													'content-type': 'multipart/form-data'
												},
												formData: {
													'userId': that.loginUId,
													'applyType': that.applyType,
													'userCardUrl': backCardUrl
												},
												success: function success(res) {
													console.log(res);
													wx.redirectTo({
														url: 'antsooComfirming'
													});
													that.$apply();
												}
											});
										}
										if (msg.isSuccess == 1) {
											wx.redirectTo({
												url: 'antsooComfirming'
											});
										}
										that.$apply();
									}
								});
							} else {

								if (that.isUploadLisence == 9) {
									wx.uploadFile({
										url: _config.api.my.confirmSubmit.url, //仅为示例，非真实的接口地址
										filePath: that.lisence,
										name: 'photo',
										header: {
											'content-type': 'multipart/form-data'
										},
										formData: {
											'userId': that.loginUId,
											'applyType': that.applyType,
											'userCardUrl': that.upNameCard
										},
										success: function success(res) {
											wx.redirectTo({
												url: 'antsooComfirming'
											});
											that.$apply();
										}
									});
								}
								_wepy2.default.request({
									url: _config.api.my.confirmSubmit.url,
									method: 'GET',
									data: {
										'userId': that.loginUId,
										'userCardUrl': that.upNameCard,
										'applyType': that.applyType,
										'businessLicenceCardUrl': that.lisence
									},
									success: function success(res) {
										var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
										if (msg.isSuccess == 1) {
											wx.redirectTo({
												url: 'antsooComfirming'
											});
										}
										that.$apply();
									}
								});
							}
						} else {
							that.warningTip({
								msg: msg.errorMsg
							});
							return;
						}
						that.$apply();
					}
				});
			},
			closeLayer: function closeLayer() {
				this.verifyingOperateLayer = false;
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(antsooConfirm, [{
		key: 'onShow',
		value: function onShow() {
			var companyTypeInfo = _wepy2.default.getStorageSync("companyTypeInfo");
			var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
			var companyNameInfo = _wepy2.default.getStorageSync("companyNameInfo");
			console.log(companyNameInfo);
			this.loginUId = antsooUserInfo.userId;
			var pages = companyNameInfo;
			if (this.alertModel != 8) {
				this.companyType = companyTypeInfo.seleType;
				this.runingWay = pages.seleModel;
				this.companyP = pages.seleProvince;
				this.companyC = pages.selePcity;
				this.companyA = pages.seleParea;
				this.addressDetail = pages.seleAdd;
			}
			this.pCompanyName = pages.seleCompanyNames == "" || pages.seleCompanyNames == null ? "" : pages.seleCompanyNames;
			if (pages.seleCompanyNames == "" || pages.seleCompanyNames == null) {
				this.hasManageRights = 0;
				this.isAdmit = 0;
			}
			if (this.pCompanyName) this.hasCompany();
			this.getRunningModel();
		}
	}, {
		key: 'onLoad',
		value: function onLoad() {
			var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
			this.loginUId = antsooUserInfo.userId;

			this.getUserInfos();
			this.getAuditStatus();
		}
	}, {
		key: 'hasCompany',
		value: function hasCompany() {
			var that = this;
			_wepy2.default.request({
				url: _config.api.my.hasManageRights.url,
				method: _config.api.my.hasManageRights.method,
				data: {
					'enterpriseName': that.pCompanyName
				},
				success: function success(res) {
					console.log(res);
					that.hasManageRights = res.data.body.enterpriseId;
					that.isAdmit = res.data.body.isHaveAdmin;
					that.$apply();
				}
			});
		}
	}, {
		key: 'getRunningModel',
		value: function getRunningModel() {
			var that = this;
			_wepy2.default.request({
				url: _config.api.relations.runningModel.url,
				method: _config.api.relations.runningModel.method,
				data: {},
				success: function success(res) {
					that.actionSheetItems = res.data.body;
					that.$apply();
				}
			});
		}
	}, {
		key: 'getUserInfos',
		value: function getUserInfos() {
			//获取个人信息
			var that = this;
			_wepy2.default.request({
				url: _config.api.my.attestationChange.url,
				method: _config.api.my.attestationChange.method,
				data: {
					'userId': that.loginUId
				},
				success: function success(res) {
					console.log(res.data.body);
					that.pName = res.data.body.name;
					that.cardPosition = res.data.body.position;
					that.pEmail = res.data.body.email;
					that.pCompanyName = res.data.body.companyName;
					that.companyType = res.data.body.opeIndustry;
					that.runingWay = res.data.body.businessMode;
					that.companyC = res.data.body.city;
					that.companyP = res.data.body.province;
					that.companyA = res.data.body.area;
					that.addressDetail = res.data.body.address;
					that.hasManageRights = res.data.body.enterpriseId;
					that.isAdmit = res.data.body.isHaveAdmin;
					that.upNameCard = res.data.body.nameCardPhoto == null || res.data.body.nameCardPhoto == '' ? '../resources/icons/cameraConfirm.png' : res.data.body.nameCardPhoto;
					that.lisence = res.data.body.businessLicencePhoto == null || res.data.body.businessLicencePhoto == '' ? '../resources/icons/cameraConfirm.png' : res.data.body.businessLicencePhoto;
					that.$apply();
				}
			});
		}
	}, {
		key: 'getAuditStatus',
		value: function getAuditStatus() {
			//获取个人审核状态
			var that = this;
			_wepy2.default.request({
				url: _config.api.my.checkStatus.url,
				method: _config.api.my.checkStatus.method,
				data: {
					'userId': that.loginUId
				},
				success: function success(res) {
					console.log(res);
					that.isAudit = res.data.body.status;
					if (res.data.body.status == 2) {
						that.verifyingOperateLayer = true;
						that.rejectReason = res.data.body.rejectReason;
					}

					that.$apply();
				}
			});
		}
	}, {
		key: 'warningTip',
		value: function warningTip(obj) {
			this.opa = true;
			this.tip = obj.msg;
			this.$apply();
			var that = this;
			setTimeout(function () {
				that.opa = false;
				that.$apply();
			}, 800);
		}
	}]);

	return antsooConfirm;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(antsooConfirm , 'pages/antsooConfirm'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,