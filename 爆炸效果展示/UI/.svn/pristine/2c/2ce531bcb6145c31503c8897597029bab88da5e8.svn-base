'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var searchCom = function (_wepy$page) {
	_inherits(searchCom, _wepy$page);

	function searchCom() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, searchCom);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = searchCom.__proto__ || Object.getPrototypeOf(searchCom)).call.apply(_ref, [this].concat(args))), _this2), _this2.config = {
			'navigationBarTitleText': '俺搜·找客户-搜索',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this2.components = {}, _this2.data = {
			searchHistory: false,
			show_hide: false,
			scrolltop: 0,
			searchList: [],
			loadNum: 0,
			wait: true,
			loadmore: true,
			scrollWrapHeight: 0,
			loginUId: -1,
			searchvalue: "", //搜索值
			long: -1,
			lat: -1,
			pageIndex: 1, //分页
			historyList: [] //历史搜索记录
		}, _this2.events = {}, _this2.methods = {
			insertkey: function insertkey(e) {
				this.searchvalue = e.detail.value;
				if (e.detail.value == "") {
					this.show_hide = false;
				} else {
					this.show_hide = true;
				}
			},
			gotoquery: function gotoquery(e) {
				var _this = this;
				_this.searchvalue = e.detail.value;
				_this.fetchSearchCompanyData();
				_this.searchvalue = _this.searchvalue == undefined ? '' : _this.searchvalue;
				var arr = _this.historyList;
				var newArr = [_this.searchvalue].concat(arr);
				_this.historyList = this.unique1(newArr);
				console.log(_this.historyList);
				if (_this.historyList.length > 10) {
					_this.historyList.splice(10, 1);
					wx.setStorageSync('historyList', _this.historyList);
				}
				wx.setStorageSync('historyList', _this.historyList);
			},
			bindhistory: function bindhistory(index) {
				var history = wx.getStorageSync('historyList');
				this.searchvalue = history[index];
				this.fetchSearchCompanyData();
			},
			scrollLoading: function scrollLoading() {
				//滚动加载
				if (this.loadmore) {
					this.pageIndex++;
					if (this.pageIndex < 6) {
						this.fetchSearchCompanyData();
					} else {
						this.loadmore = false;
						wx.showModal({
							title: '',
							content: '更多内容请前往按搜app',
							showCancel: true,
							confirmText: '确定',
							confirmColor: '#0092ff',
							success: function success(res) {
								if (res.confirm) {
									if (wx.getSystemInfoSync().system.toLowerCase().indexOf('andr') != -1) {
										console.log('android');
										wx.navigateTo({
											url: 'downLoad'
										});
									} else {
										console.log('iso');
										wx.navigateTo({
											url: 'downLoad'
										});
									}
								} else if (res.cancel) {
									console.log('用户点击取消');
								}
							}
						});
					}
				} else {
					return false;
				}
			},
			cancelSearch: function cancelSearch() {
				this.searchvalue = "";
				this.show_hide = false;
			},
			subAdvice: function subAdvice() {
				wx.navigateTo({
					url: 'feedback'
				});
			},
			clearHistoryList: function clearHistoryList() {
				this.historyList = []; // 清空列表
				wx.removeStorageSync('historyList'); // 清楚缓存
			},
			toCompanyDetail: function toCompanyDetail(e) {
				if (!this.loginUId) {
					wx.navigateTo({
						url: 'login?fromPage=company'
					});
					return;
				}
				var memberId = e.currentTarget.dataset.id;
				wx.navigateTo({
					url: 'comDetailInfo?companyId=' + memberId + '&userId=' + this.loginUId
				});
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(searchCom, [{
		key: 'onShow',
		value: function onShow() {
			this.pageIndex = 1;
		}
	}, {
		key: 'onLoad',
		value: function onLoad(e) {
			var antUserInfo = wx.getStorageSync('antUserInfo');
			this.loginUId = antUserInfo.userId;
			this.long = e.long;
			this.lat = e.lat;
			this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.91;
			this.searchList = []; //每次進入時置空列表
			this.searchvalue = '';
			this.historyList = wx.getStorageSync('historyList') == '' ? [] : wx.getStorageSync('historyList');
		}
	}, {
		key: 'fetchSearchCompanyData',
		value: function fetchSearchCompanyData() {
			//获取人脉统计
			wx.showLoading({
				title: '加载中'
			});
			var that = this;
			var pageSize = 20;
			_wepy2.default.request({
				url: _config.api.index.searchEnteprise.url,
				method: _config.api.index.searchEnteprise.method,
				data: {
					'key': this.searchvalue,
					'userId': this.loginUId,
					'longitude': this.long,
					'latitude': this.lat,
					'pageInfo2': {
						'pSize': pageSize,
						'pIndex': this.pageIndex
					}
				},
				success: function success(res) {
					var searchListData = res.data.body;
					var tPages = res.data.page.tCount;
					var pages = searchListData.length / 20;
					var isInt = tPages / (that.pageIndex * 20);
					that.loadmore = pages == 1 && isInt != 1 ? true : false;
					if (that.pageIndex > 1) {
						that.searchList = that.searchList.concat(searchListData);
					} else {
						that.searchList = searchListData;
					}
					if (that.searchList.length <= 0) {
						that.searchHistory = true;
					}
					that.$apply();
					wx.hideLoading();
				}
			});
		}
	}, {
		key: 'unique1',
		value: function unique1(array) {
			// 数组去重
			var n = []; //一个新的临时数组
			for (var i = 0; i < array.length; i++) {
				if (n.indexOf(array[i]) == -1) {
					n.push(array[i]);
				}
			}
			return n;
		}
	}]);

	return searchCom;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(searchCom , 'pages/searchCom'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,