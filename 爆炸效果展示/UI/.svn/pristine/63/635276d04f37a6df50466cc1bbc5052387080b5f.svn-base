'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

var _qqmapWxJssdk = require('./../utils/qqmap-wx-jssdk.js');

var _qqmapWxJssdk2 = _interopRequireDefault(_qqmapWxJssdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var materialPrice = function (_wepy$page) {
    _inherits(materialPrice, _wepy$page);

    function materialPrice() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, materialPrice);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = materialPrice.__proto__ || Object.getPrototypeOf(materialPrice)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
            'navigationBarTitleText': '报价详情',
            'navigationBarTextStyle': '#FFFFFF',
            'navigationBarBackgroundColor': '#0386FF'
        }, _this.data = {
            currentCityName: "",
            productInfoDetail: {},
            MaterialDetailList: [],
            loadNum: 0,
            wait: true,
            loadmore: true,
            scrolltop: 0, //滚动位置
            scrollHeight: 0,
            pageIndex: 1, //分页
            fscrolltop: null,
            showTopBtn: false,
            pName: "",
            mBrand: "",
            mProducer: "",
            uId: -1
        }, _this.methods = {
            toMaterialDetail: function toMaterialDetail(e) {
                var productsId = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url: 'materialDetail?proId=' + productsId
                });
            },
            scrollHandle: function scrollHandle(e) {
                //滚动事件
                this.scrolltop = e.detail.scrollTop;
                if (e.detail.scrollTop > 200) {
                    this.showTopBtn = true;
                } else {
                    this.showTopBtn = false;
                }
            },
            scrollFilterContent: function scrollFilterContent(e) {
                this.fscrolltop = 0;
            },
            goToTop: function goToTop() {
                //回到顶部
                this.scrolltop = 0;
                // this.$apply();
            },
            scrollLoading: function scrollLoading() {
                //滚动加载
                this.loadmore = false;
                this.$apply();
                console.log("loadMore:" + this.loadmore);
                this.pageIndex++;
                this.fetchMaterialPriceData();
            },
            onPullDownRefresh: function onPullDownRefresh() {
                //下拉刷新
                this.page = 0;
                this.productList = [];
                this.fetchMaterialPriceData();
                this.fetchFilterData();
                // setTimeout(()=>{
                // wx.stopPullDownRefresh()
                // },1000)
            },
            startCall: function startCall(e) {
                //一键拨号
                var telNumber = e.currentTarget.dataset.tel;
                var toUId = e.currentTarget.dataset.uid;
                console.log(e);
                wx.makePhoneCall({
                    phoneNumber: telNumber
                });
                var that = this;
                _wepy2.default.request({
                    url: _config.api.common.callLinkers.url,
                    method: _config.api.common.callLinkers.method,
                    data: {
                        'toUserId': toUId,
                        'userId': that.uId
                    },
                    success: function success(res) {
                        console.log(res);
                    }
                });
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(materialPrice, [{
        key: 'onLoad',
        value: function onLoad(e) {
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.uId = antsooUserInfo.userId;
            this.pName = e.proName;
            this.mBrand = e.proBrand;
            this.mProducer = e.producer;
            this.scrollHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 160;
            console.log('height' + this.scrollHeight);
            this.fetchMaterialPriceData();
            var that = this;
            var qqmapsdk = new _qqmapWxJssdk2.default({
                key: 'BFYBZ-FF73Q-FNK5G-GUK2J-5DUSO-6QBDJ' // 必填
            });
            wx.getLocation({
                type: 'wgs84',
                success: function success(res) {
                    qqmapsdk.reverseGeocoder({
                        location: {
                            latitude: res.latitude,
                            longitude: res.longitude
                        },
                        success: function success(addressRes) {
                            that.currentCityName = addressRes.result.address_component.city;
                            that.$apply();
                        }
                    });
                }
            });
        }
    }, {
        key: 'fetchMaterialPriceData',
        value: function fetchMaterialPriceData() {
            //获取材料详情列表
            wx.showLoading({
                title: '加载中'
            });
            var that = this;
            var pageSize = 20;
            _wepy2.default.request({
                url: _config.api.product.materialDetailLists.url,
                method: _config.api.product.materialDetailLists.method,
                data: {
                    'commodityName': that.pName,
                    'productSign': that.mBrand,
                    'producer': that.mProducer,
                    'userId': that.uId,
                    'pageInfo2': {
                        'pSize': pageSize,
                        'pIndex': that.pageIndex
                    }
                },
                success: function success(res) {
                    console.log(res);
                    var materialData = res.data.body.dailyPriceUser;
                    that.productInfoDetail = res.data.body.productDto;
                    var pages = Math.ceil(materialData.length / 20);
                    if (that.pageIndex > 1) {
                        that.MaterialDetailList = that.MaterialDetailList.concat(materialData);
                    } else {
                        that.MaterialDetailList = materialData;
                    }
                    // wepy.stopPullDownRefresh()
                    that.loadmore = pages > that.pageIndex ? true : false;
                    that.$apply();
                    wx.hideLoading();
                    //that.loadMore = true;
                }
            });
        }
    }]);

    return materialPrice;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(materialPrice , 'pages/materialPrice'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,