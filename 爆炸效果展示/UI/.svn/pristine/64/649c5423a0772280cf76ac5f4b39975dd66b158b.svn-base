'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../../config.js');

var _location = require('./../../../utils/location.js');

var _location2 = _interopRequireDefault(_location);

var _search = require('./../../search.js');

var _search2 = _interopRequireDefault(_search);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var index = function (_wepy$component) {
	_inherits(index, _wepy$component);

	function index() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, index);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = index.__proto__ || Object.getPrototypeOf(index)).call.apply(_ref, [this].concat(args))), _this2), _this2.components = {
			search: _search2.default
		}, _this2.data = {
			loginUId: -1,
			showStatus: true,
			bannerImgUrls: [],
			statisticData: [], //首页-周边的人/周边的企业接受组件传递过来的数组；
			recommandList: [],
			interval: 3000,
			duration: 1000,
			loadmore: false,
			scrollWrapHeight: 0,
			long: -1,
			lat: -1,
			currentCityName: '',
			pageIndex: 1,
			confirmInfos: '',
			confirmBtn: '',
			toUrl: '',
			bannerId: 0,
			bindCity: '',
			showStatusInt: 0
		}, _this2.events = {
			'getBannerData': function getBannerData(arg) {
				this.bannerImgUrls = arg;
				wx.setStorageSync('goBanner', this.bannerImgUrls);
			},
			'getAntsooUserInfo': function getAntsooUserInfo(param) {
				this.showStatusInt = param;
				switch (param) {
					case -1:
						this.confirmInfos = '登录可查看所有人脉、企业信息';
						this.confirmBtn = '立即登录';
						this.toUrl = "toLogin";
						break;
					case 0:
						this.showStatus = false;
						break;
					case 1:
						console.log(wx.getStorageSync("hasClose"));
						if (wx.getStorageSync("hasClose") == 1) {
							this.showStatus = false;
						} else {
							this.confirmInfos = '您的身份已认证成功，请前往查看';
							this.confirmBtn = '立即查看';
							this.toUrl = "confirmChange";
						}
						break;
					case 2:
						this.showStatus = true;
						this.confirmInfos = '您的认证未通过，请前往查看';
						this.confirmBtn = '立即查看';
						this.toUrl = "confirmNow";
						break;
					case 3:
						this.showStatus = true;
						this.confirmInfos = '一键认证，不错过任何重要商机';
						this.confirmBtn = '立即认证';
						this.toUrl = "confirmNow";
						break;
					case 4:
						this.showStatus = true;
						this.confirmInfos = '一键认证，不错过任何重要商机';
						this.confirmBtn = '立即认证';
						this.toUrl = "confirmNow";
						break;
				}
			},
			'selectCity': function selectCity(parmas) {
				//var lasthistory = wx.getStorageSync('historyCityList')==''?[{cityName:this.currentCityName}]:wx.getStorageSync('historyCityList');
				this.currentCityName = parmas;
				this.bindCity = parmas;
				this.fetchRecommandData();
			}
		}, _this2.methods = {
			ShowStatus: function ShowStatus() {
				this.showStatus = false;
				if (this.showStatusInt == 1) {
					wx.setStorageSync("hasClose", 1);
				}
			},
			changeOther: function changeOther() {
				//换一批
				this.pageIndex++;
				if (this.pageIndex < 6) {
					this.fetchRecommandData();
				} else {
					wx.showModal({
						title: '',
						content: '更多内容请前往按搜app',
						showCancel: true,
						confirmText: '确定',
						confirmColor: '#0092ff',
						success: function success(res) {
							if (res.confirm) {
								if (wx.getSystemInfoSync().system.toLowerCase().indexOf('andr') != -1) {
									console.log('android');
									wx.navigateTo({
										url: 'downLoad'
									});
								} else {
									console.log('iso');
									wx.navigateTo({
										url: 'downLoad'
									});
								}
							} else if (res.cancel) {
								console.log('用户点击取消');
							}
						}
					});
					return;
				}
			},
			confirmNow: function confirmNow() {
				wx.navigateTo({
					url: 'antsooConfirm'
				});
			},
			toLogin: function toLogin() {
				wx.redirectTo({
					url: 'login?formPage=index'
				});
			},
			confirmChange: function confirmChange() {
				if (this.showStatusInt == 1) {
					wx.setStorageSync("hasClose", 1);
				}
				wx.navigateTo({
					url: 'attestationChange'
				});
			},
			toDetails: function toDetails(e) {
				if (e.currentTarget.dataset.i == 0) {
					wx.navigateTo({
						url: 'roundCompany?city=' + this.currentCityName
					});
				} else if (e.currentTarget.dataset.i == 1) {
					wx.navigateTo({
						url: 'roundPerson?city=' + this.currentCityName
					});
				}
			},
			swiperChange: function swiperChange(e) {
				this.bannerId = e.detail.current;
			},
			bannerTap: function bannerTap() {
				wx.navigateTo({
					url: 'bannerPage?bannerId=' + this.bannerId
				});
			},
			toCompanyDetail: function toCompanyDetail(e) {
				if (!this.loginUId) {
					wx.navigateTo({
						url: '../../../pages/login?fromPage=company'

					});
					return;
				}
				var memberId = e.currentTarget.dataset.id;
				wx.navigateTo({
					url: '../../../pages/comDetailInfo?companyId=' + memberId + '&userId=' + this.loginUId
				});
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(index, [{
		key: 'onShow',
		value: function onShow() {
			this.pageIndex = 1;
		}
	}, {
		key: 'onLoad',
		value: function onLoad() {
			var antUserInfo = wx.getStorageSync('antUserInfo');
			this.loginUId = antUserInfo.userId;
			var _this = this;
			this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 130;
			_location2.default.getLocation().then(function (res) {
				_this.long = res.lng;
				_this.lat = res.lat;
				_this.currentCityName = res.city;
				_this.fetchRecommandData();
				_this.fetchCompanyOrRelationsData();
				_this.$apply();
			});
		}
	}, {
		key: 'fetchRecommandData',
		value: function fetchRecommandData() {
			//获取俺搜推荐
			var that = this;
			_wepy2.default.request({
				url: _config.api.index.antsooRecommand.url,
				method: _config.api.index.antsooRecommand.method,
				data: {
					cityName: this.currentCityName,
					pageInfo2: {
						pSize: 5,
						pIndex: that.pageIndex
					}
				},
				success: function success(res) {
					var recommandListData = res.data.body;
					that.recommandList = recommandListData;
					that.$apply();
				}
			});
		}
	}, {
		key: 'unique1',
		value: function unique1(array) {
			// 数组去重
			var allArr = []; //新数组
			for (var i = 0; i < array.length; i++) {
				var flag = true;
				for (var j = 0; j < allArr.length; j++) {
					if (array[i].cityId == allArr[j].cityId) {
						flag = false;
					};
				};
				if (flag) {
					allArr.push(array[i]);
				};
			};
			return allArr;
		}
	}, {
		key: 'fetchCompanyOrRelationsData',
		value: function fetchCompanyOrRelationsData() {
			//获取企业和人脉数量
			var that = this;
			_wepy2.default.request({
				url: _config.api.index.companyOrRelationsNum.url,
				method: _config.api.index.companyOrRelationsNum.method,
				data: {
					cityName: that.currentCityName,
					longitude: that.long,
					latitude: that.lat,
					startKm: 0,
					endKm: 50
				},
				success: function success(res) {
					that.statisticData = res.data.body;
					that.$apply();
				}
			});
		}
	}]);

	return index;
}(_wepy2.default.component);

exports.default = index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,