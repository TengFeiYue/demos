'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var linkedSeller = function (_wepy$page) {
    _inherits(linkedSeller, _wepy$page);

    function linkedSeller() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, linkedSeller);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = linkedSeller.__proto__ || Object.getPrototypeOf(linkedSeller)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
            'navigationBarTitleText': '我联系过的销售',
            'navigationBarTextStyle': '#FFFFFF',
            'navigationBarBackgroundColor': '#0386FF'
        }, _this.components = {}, _this.data = {
            hasDatas: false,
            linkedManList: [],
            loadNum: 0,
            wait: true,
            loadmore: true,
            scrolltop: 0, //滚动位置
            scrollWrapHeight: 0,
            pageIndex: 1, //分页
            fscrolltop: null,
            showTopBtn: false,
            loginUId: -1
        }, _this.methods = {
            toSellerList: function toSellerList() {
                wx.navigateTo({
                    url: 'index?showCon=sellerList'
                });
            },
            scrollFilterContent: function scrollFilterContent(e) {
                this.fscrolltop = 0;
            },
            goToTop: function goToTop() {
                //回到顶部
                this.scrolltop = 0;
            },
            scrollLoading: function scrollLoading() {
                //滚动加载
                console.log("loadMore:" + this.loadmore);
                if (this.loadmore) {
                    this.pageIndex++;
                    this.fetchLinkedManData();
                } else {
                    return false;
                }
            },
            onPullDownRefresh: function onPullDownRefresh() {//下拉刷新
                //  this.page = 0;
                //  this.productList = [];
                //  this.fetchLinkedManData();
            },
            toMarketingDetail: function toMarketingDetail(e) {
                var userId = e.currentTarget.dataset.uid;
                wx.navigateTo({
                    url: 'marketingDetail?userId=' + userId
                });
            },
            startCall: function startCall(e) {
                //一键拨号
                var telNumber = e.currentTarget.dataset.tel;
                var toUId = e.currentTarget.dataset.uid;
                wx.makePhoneCall({
                    phoneNumber: telNumber
                });
                var that = this;
                _wepy2.default.request({
                    url: _config.api.common.callLinkers.url,
                    method: _config.api.common.callLinkers.method,
                    data: {
                        'toUserId': toUId,
                        'userId': that.uId
                    },
                    success: function success(res) {
                        console.log(res);
                    }
                });
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(linkedSeller, [{
        key: 'onLoad',
        value: function onLoad() {
            var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
            this.loginUId = antsooUserInfo.userId;
            this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.99;
            console.log('height' + this.scrollHeight);
            this.fetchLinkedManData();
        }
    }, {
        key: 'fetchLinkedManData',
        value: function fetchLinkedManData() {
            //获取材料详情列表
            wx.showLoading({
                title: '加载中'
            });
            var that = this;
            var pageSize = 20;
            _wepy2.default.request({
                url: _config.api.common.linkedSellerList.url,
                method: _config.api.common.linkedSellerList.method,
                data: {
                    'userId': that.loginUId,
                    'pageInfo2': {
                        'pSize': pageSize,
                        'pIndex': that.pageIndex
                    }
                },
                success: function success(res) {
                    if (res.data.isSuccess == 1) {
                        if (res.data.body) {
                            that.hasDatas = true;
                        } else {
                            that.hasDatas = false;
                        }
                    }
                    console.log(res.data.body);
                    var linkManData = res.data.body;
                    if (linkManData) {
                        var pages = linkManData.length / 20;
                        that.loadmore = pages == 1 ? true : false;
                        if (that.pageIndex > 1) {
                            that.linkedManList = that.linkedManList.concat(linkManData);
                        } else {
                            that.linkedManList = linkManData;
                        }
                    }
                    that.$apply();
                    wx.hideLoading();
                }
            });
        }
    }]);

    return linkedSeller;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(linkedSeller , 'pages/linkedSeller'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,