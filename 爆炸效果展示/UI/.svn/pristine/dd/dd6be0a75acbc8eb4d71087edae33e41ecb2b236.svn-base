'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var attestationChange = function (_wepy$page) {
	_inherits(attestationChange, _wepy$page);

	function attestationChange() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, attestationChange);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = attestationChange.__proto__ || Object.getPrototypeOf(attestationChange)).call.apply(_ref, [this].concat(args))), _this2), _this2.config = {
			'navigationBarTitleText': '俺搜认证变更',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this2.components = {}, _this2.data = {

			opa: false,
			tip: "",
			sh: 0,
			loginUId: 10379,
			info: {},
			layerFlag: false,
			hideOperateLayer: false,
			unPassedOperateLayer: false,
			verifyingOperateLayer: false,
			offCompanyLayer: false,
			cardDuty: '',
			rejectReason: "",
			changeNameCard: "../resources/img/camera.png"
		}, _this2.events = {}, _this2.methods = {
			swLayer: function swLayer() {
				var _this = this;
				_this.layerFlag = !_this.layerFlag;
			},
			posterDutyChange: function posterDutyChange() {
				var that = this;
				_wepy2.default.request({
					url: _config.api.my.changeInfoStatus.url,
					method: _config.api.my.changeInfoStatus.method,
					data: {
						'userId': that.loginUId
					},
					success: function success(res) {
						console.log(res);
						var applyStatus = res.data.body.status;
						that.statement = res.data.body.status;
						that.UserCompanyId = res.data.body.id;
						var position = res.data.body.position;
						var imgUrl = res.data.body.nameCardPhoto;
						var reject = res.data.body.rejectReason;
						switch (applyStatus) {//
							case 1:
								that.hideLayer = false;
								that.hideOperateLayer = true; //通过
								break;
							case 2:
								that.hideLayer = false;
								that.unPassedOperateLayer = true; //未通过
								that.cardDuty = position;
								that.changeNameCard = imgUrl;
								that.rejectReason = reject;
								break;
							case 0:
								that.hideLayer = false;
								that.verifyingOperateLayer = true; //审核中
								break;
							case 4:
								that.hideLayer = false;
								that.hideOperateLayer = true; //通过
								break;
						}
						that.$apply();
					}
				});
			},
			offCompany: function offCompany() {
				this.offCompanyLayer = true;
			},
			closeLayer: function closeLayer() {
				this.layerFlag = false;
				this.hideOperateLayer = false; //变更职位信息
				this.unPassedOperateLayer = false; //未通过
				this.verifyingOperateLayer = false; //审核中
				this.offCompanyLayer = false; //脱离企业
			},
			getVal: function getVal(e) {
				this.cardDuty = e.detail.value;
			},
			upLoadCard: function upLoadCard() {
				var that = this;
				wx.chooseImage({
					count: 1, // 默认9
					sizeType: ['original', 'compressed'],
					sourceType: ['album', 'camera'],
					success: function success(res) {
						that.isUpload = 8; //判断是否是上传的还是服务器返回的
						that.changeNameCard = res.tempFilePaths[0];
						if (res.tempFilePaths.length > 0) {
							wx.saveFile({
								tempFilePath: res.tempFilePaths[0],
								success: function success(res) {
									that.changeNameCard = res.savedFilePath;
									that.$apply();
								}
							});
						}
						that.$apply();
					}
				});
			},
			offCompanySub: function offCompanySub() {
				//提交脱离企业
				var that = this;
				_wepy2.default.request({
					url: _config.api.my.offCompany.url,
					method: 'POST',
					data: {
						'userId': this.loginUId
					},
					success: function success(res) {
						console.log(res.data);
						var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
						if (msg.isSuccess == 1) {
							wx.showToast({
								title: '脱离成功！',
								icon: 'success'
							});
							that.offCompanyLayer = false; //脱离企业
							wx.setStorageSync('offCompanySub', 'success');
						} else {
							that.warningTip({
								msg: msg.errorMsg
							});
						}
						that.$apply();
					}
				});
			},
			subChangedInfo: function subChangedInfo() {
				var that = this;
				var loginUId = this.loginUId;
				var changedDuty = this.cardDuty.trim();
				var uploadPic = this.changeNameCard;
				if (changedDuty == '' || changedDuty == null) {
					this.warningTip({
						msg: '职位不能为空！'
					});
					return;
				}
				if (uploadPic == '../resources/img/layerCamera.jpg') {
					this.warningTip({
						msg: '请选择名片！'
					});
					return;
				}
				wx.getSavedFileList({
					success: function success(res) {
						console.log(res);
						for (var i = 0; i < res.fileList.length - 1; i++) {
							for (var j = 0; j < res.fileList.length - 1 - i; j++) {
								if (res.fileList[j].createTime > res.fileList[j + 1].createTime) {
									var tem = res.fileList[j];
									res.fileList[j] = res.fileList[j + 1];
									res.fileList[j + 1] = tem;
								}
							}
						}
						if (res.fileList.length > 5) {
							wx.removeSavedFile({
								filePath: res.fileList[0].filePath,
								complete: function complete(res) {
									console.log(res);
								}
							});
						}
						that.changeNameCard = res.fileList[res.fileList.length - 1].filePath;
						that.$apply();
					}
				});
				console.log(this.statement);
				if (this.statement == 2) {
					console.log(this.isUpload);
					if (this.isUpload == 8 && this.statement == 2) {
						//使用上传图片带参数
						wx.uploadFile({
							url: _config.api.my.changeInfo.url, //仅为示例，非真实的接口地址
							filePath: that.changeNameCard,
							name: 'photo',
							header: {
								'content-type': 'multipart/form-data'
							},
							formData: {
								'userId': loginUId,
								'userPosition': changedDuty
							},
							success: function success(res) {
								var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
								if (msg.isSuccess == 1) {
									wx.showToast({
										title: '提交成功!',
										icon: 'success'
									});
								} else {
									that.warningTip({
										msg: msg.errorMsg
									});
								}
								that.hideLayer = false;
								that.hideOperateLayer = false; //变更职位信息
								that.unPassedOperateLayer = false; //未通过
								that.verifyingOperateLayer = false;
								that.$apply();
							}
						});
					} else {
						//使用request上传
						console.log(that.changeNameCard);
						_wepy2.default.request({
							url: _config.api.my.changeInfo.url,
							method: 'POST',
							header: {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							data: {
								'userId': loginUId,
								'userPosition': changedDuty,
								'userCardUrl': that.changeNameCard //如果要使用回显的名片
							},
							success: function success(res) {
								console.log(res.data);
								var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
								if (msg.isSuccess == 1) {
									wx.showToast({
										title: '提交成功！',
										icon: 'success'
									});
								} else {
									that.warningTip({
										msg: msg.errorMsg
									});
								}
								that.hideLayer = false;
								that.hideOperateLayer = false; //变更职位信息
								that.unPassedOperateLayer = false; //未通过
								that.verifyingOperateLayer = false;
								that.$apply();
							}
						});
					}
				} else {
					wx.uploadFile({
						url: _config.api.my.changeInfo.url, //仅为示例，非真实的接口地址
						filePath: that.changeNameCard,
						name: 'photo',
						header: {
							'content-type': 'multipart/form-data'
						},
						formData: {
							'userId': loginUId,
							'userPosition': changedDuty
						},
						success: function success(res) {
							var msg = typeof res.data == "string" ? JSON.parse(res.data) : res.data;
							if (msg.isSuccess == 1) {
								wx.showToast({
									title: '提交成功!',
									icon: 'success'
								});
							} else {
								that.warningTip({
									msg: msg.errorMsg
								});
							}
							that.hideLayer = false;
							that.hideOperateLayer = false; //变更职位信息
							that.unPassedOperateLayer = false; //未通过
							that.verifyingOperateLayer = false;
							that.$apply();
						}
					});
				}
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(attestationChange, [{
		key: 'onShow',
		value: function onShow() {
			var antsooUserInfo = _wepy2.default.getStorageSync("antUserInfo");
			this.loginUId = antsooUserInfo.userId;
			this.getInfo();
			this.$apply();
		}
	}, {
		key: 'onLoad',
		value: function onLoad() {
			var that = this;
			wx.getSystemInfo({
				success: function success(res) {
					that.sh = res.windowHeight;
				}
			});
		}
	}, {
		key: 'onLaunch',
		value: function onLaunch() {}

		// 请求数据

	}, {
		key: 'getInfo',
		value: function getInfo() {
			var that = this;
			_wepy2.default.request({
				url: _config.api.my.attestationChange.url,
				method: _config.api.my.attestationChange.method,
				data: {
					'userId': that.loginUId
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						that.info = res.data.body;
						console.log(that.info);
						that.$apply();
						wx.hideLoading();
					}
				}
			});
		}
	}, {
		key: 'warningTip',
		value: function warningTip(obj) {
			this.opa = true;
			this.tip = obj.msg;
			this.$apply();
			var that = this;
			setTimeout(function () {
				that.opa = false;
				that.$apply();
			}, 800);
		}
	}]);

	return attestationChange;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(attestationChange , 'pages/attestationChange'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,