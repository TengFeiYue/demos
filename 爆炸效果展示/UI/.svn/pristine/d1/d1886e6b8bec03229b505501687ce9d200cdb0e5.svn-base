'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var connectionDetail = function (_wepy$page) {
	_inherits(connectionDetail, _wepy$page);

	function connectionDetail() {
		var _ref;

		var _temp, _this2, _ret;

		_classCallCheck(this, connectionDetail);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = connectionDetail.__proto__ || Object.getPrototypeOf(connectionDetail)).call.apply(_ref, [this].concat(args))), _this2), _this2.config = {
			'navigationBarTitleText': '俺搜·找客户-人脉',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}, _this2.components = {}, _this2.data = _defineProperty({
			loginUId: -1,
			info: {},
			num: -1,
			labels: [],
			memberId: '',
			phone: '',
			collectFlag: -1,
			sh: 0,
			imgalist: {},
			layFlag: false
		}, 'imgalist', []), _this2.events = {}, _this2.methods = {
			closeLayer: function closeLayer() {
				this.layFlag = false;
			},
			showIsClock: function showIsClock() {
				wx.showModal({
					title: '',
					content: '请前往俺搜APP解锁联系方式',
					cancelText: '取消',
					confirmText: '前往',
					confirmColor: '#0092ff',
					success: function success(res) {
						if (res.confirm) {
							wx.navigateTo({
								url: 'downLoad'
							});
						}
					}
				});
			},
			callPhone: function callPhone() {
				wx.makePhoneCall({
					phoneNumber: this.phone
				});
			},
			isCollect: function isCollect() {
				var _this = this;
				if (_this.collectFlag == 1) {
					//表示已经收藏过了，点击时取消收藏，调用取消收藏接口
					wx.request({
						method: 'POST',
						url: _config.api.company.cancelCollection.url,
						data: {
							userId: _this.loginUId,
							bizId: _this.memberId,
							type: 5
						},
						success: function success(res) {
							if (res.statusCode == 200) {
								wx.showToast({
									title: '收藏取消成功',
									icon: 'success',
									duration: 2000
								});
								if (res.data.isSuccess == 1) {
									_this.num = res.data.body;
								}
								_this.getCollect();
								_this.$apply();
							}
						}
					});
				} else {
					//表示未曾收藏过，点击时添加收藏，调用添加收藏接口
					wx.request({
						method: 'POST',
						url: _config.api.company.addCollection.url,
						data: {
							userId: _this.loginUId,
							bizId: _this.memberId,
							type: 5
						},
						success: function success(res) {
							if (res.statusCode == 200) {
								wx.showToast({
									title: '收藏已成功',
									icon: 'success',
									duration: 2000
								});
								if (res.data.isSuccess == 1) {
									_this.num = res.data.body;
								}
								_this.getCollect();
								_this.$apply();
							}
						}
					});
				}
			},
			showLay: function showLay() {
				var _this = this;
				_this.layFlag = true;
				_this.getQrCode();
			},
			previewImage: function previewImage() {
				var _this = this;
				_this.layFlag = false;
				wx.previewImage({
					urls: _this.data.imgalist
				});
			}
		}, _temp), _possibleConstructorReturn(_this2, _ret);
	}

	_createClass(connectionDetail, [{
		key: 'onLoad',
		value: function onLoad(options) {
			var that = this;
			wx.getSystemInfo({
				success: function success(res) {
					that.sh = res.screenHeight;
				}
			});
			var scene = decodeURIComponent(options.scene);
			if (scene != 'undefined') {
				var optionUid = scene.split('&')[0].split('=')[1];
				var optionEntId = scene.split('&')[1].split('=')[1];
				this.loginUId = optionUid;
				this.companyId = optionEntId;
				this.getInfo();
			}

			this.loginUId = options.scene == undefined ? options.userId : optionUid;
			this.memberId = options.scene == undefined ? options.memberId : optionEntId;
			this.getInfo();
			this.getCollect();
		}
	}, {
		key: 'onUnload',
		value: function onUnload() {
			this.layFlag = false;
		}
	}, {
		key: 'getInfo',
		value: function getInfo() {
			var _this = this;
			wx.request({
				method: _config.api.my.myCard.method,
				url: _config.api.my.myCard.url,
				data: {
					memberId: _this.memberId,
					userId: _this.loginUId
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						_this.info = res.data.body;
						_this.phone = _this.info.companyMember.phoneNo;
						_this.num = _this.info.companyMember.favoriteQty;
						var labels = _this.info.companyMember.labels;
						if (labels == '' || labels == null) {
							_this.labels = [];
						} else {
							_this.labels = labels.split(',');
						}
					}
					_this.$apply();
				}
			});
		}
	}, {
		key: 'getCollect',
		value: function getCollect() {
			var _this = this;
			wx.request({
				method: _config.api.company.isCollect.method,
				url: _config.api.company.isCollect.url,
				data: {
					userId: _this.loginUId,
					bizId: _this.memberId,
					type: 5
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						_this.collectFlag = res.data.body;
						_this.$apply();
					}
				}
			});
		}
	}, {
		key: 'getQrCode',
		value: function getQrCode() {
			var _this = this;
			wx.request({
				url: _config.api.my.myQrCode.url,
				method: _config.api.my.myQrCode.method,
				data: {
					memberId: _this.memberId,
					userId: _this.loginUId
				},
				success: function success(res) {
					if (res.statusCode == 200) {
						_this.layInfo = res.data.body;
						_this.imgalist[0] = _this.layInfo.memberQrcode;
						_this.$apply();
					}
				}
			});
		}
	}]);

	return connectionDetail;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(connectionDetail , 'pages/connectionDetail'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,