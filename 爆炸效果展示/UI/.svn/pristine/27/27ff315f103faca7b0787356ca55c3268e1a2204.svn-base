'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _config = require('./../../config.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var recirculatMaterial = function (_wepy$component) {
    _inherits(recirculatMaterial, _wepy$component);

    function recirculatMaterial() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, recirculatMaterial);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = recirculatMaterial.__proto__ || Object.getPrototypeOf(recirculatMaterial)).call.apply(_ref, [this].concat(args))), _this), _this.events = {
            'selectCity': function selectCity($event) {
                _this.dPlace = $event;
                _this.fetchRecirculatMaterialData();
                _this.$apply();
            }
        }, _this.data = {
            recirculatMaterialList: [],
            loadNum: 0,
            wait: true,
            loadmore: true,
            scrolltop: 0, //滚动位置
            scrollWrapHeight: 0,
            pageIndex: 1, //分页
            fscrolltop: null,
            showTopBtn: false,
            proType: '回料',
            sType: '',
            autoOrder: '',
            sKey: '',
            dPlace: ''
        }, _this.methods = {
            toMaterialDetail: function toMaterialDetail(e) {
                var productsId = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url: 'materialDetail?proId=' + productsId
                });
            },
            scrollFilterContent: function scrollFilterContent(e) {
                this.fscrolltop = 0;
            },
            scrollLoading: function scrollLoading() {
                //滚动加载
                console.log("loadMore:" + this.loadmore);
                if (this.loadmore) {
                    this.pageIndex++;
                    this.fetchRecirculatMaterialData();
                } else {
                    return false;
                }
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(recirculatMaterial, [{
        key: 'onShow',
        value: function onShow() {
            this.fetchRecirculatMaterialData();
        }
    }, {
        key: 'onLoad',
        value: function onLoad() {
            this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight * 0.91 - 130;
            console.log('height' + this.scrollWrapHeight);
            this.fetchRecirculatMaterialData();
        }
    }, {
        key: 'fetchRecirculatMaterialData',
        value: function fetchRecirculatMaterialData() {
            //获取产品列表
            if (this.proType == '回料') {
                wx.showLoading({
                    title: '加载中'
                });
                var that = this;
                var pageSize = 20;
                _wepy2.default.request({
                    url: _config.api.product.materialLists.url,
                    method: _config.api.product.materialLists.method,
                    data: {
                        'productType': that.proType,
                        'seriesType': that.sType,
                        'order': that.autoOrder,
                        'searchKey': that.sKey,
                        'deliveryPlace': that.dPlace,
                        'pageInfo2': {
                            'pSize': pageSize,
                            'pIndex': that.pageIndex
                        }
                    },
                    success: function success(res) {
                        var materialData = res.data.body.dailyBaseProductResponse;
                        var tPages = res.data.page.tCount;
                        var pages = materialData.length / 20;
                        var isInt = tPages / (that.pageIndex * 20);
                        that.loadmore = pages == 1 && isInt != 1 ? true : false;
                        if (that.pageIndex > 1) {
                            that.recirculatMaterialList = that.recirculatMaterialList.concat(materialData);
                        } else {
                            that.recirculatMaterialList = materialData;
                        }
                        that.$apply();
                        wx.hideLoading();
                    }
                });
            }
        }
    }, {
        key: 'getSelectTabData',
        value: function () {
            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(param) {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.proType = param.pType;
                                this.sType = param.seriesType;
                                this.autoOrder = param.order;
                                this.sKey = param.searchKey;

                            case 4:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function getSelectTabData(_x) {
                return _ref2.apply(this, arguments);
            }

            return getSelectTabData;
        }()
    }]);

    return recirculatMaterial;
}(_wepy2.default.component);

exports.default = recirculatMaterial;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,