<style type="scss">
.connectionUl{
	/*padding:0 0 0 30rpx;*/
	.connectionList{
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		padding:16rpx 0;
		border-bottom:1px solid #ECECEC;
		.headImg{
			margin-left: 30rpx;
			flex:1;
			image{
				width:60rpx;
				height:60rpx;
				border-radius: 50%;
			}
		}
		.itemDl{
			flex:8;
			.connectionName{
				font-size: 28rpx;
				color: #333333;
				letter-spacing: -0.15px;
				line-height: 40rpx;
				image{
					width:80rpx;
					height:28rpx;
					position:relative;
					top:4rpx; right:-16rpx;
				}
			}
			.connectionDuty{
				font-size: 24rpx;
				color: #333333;
				letter-spacing: 0.17px;
				height:40rpx;
				line-height: 40rpx;
			}
			.dataServes{
				font-size: 24rpx;
				color: #666666;
				letter-spacing: 0.17px;
				line-height: 40rpx;
				.distance-style{
					display: inline-block;
					float: right;
					margin-right: 28rpx;
				}/*周边de人距离*/
			}
			.connectionCities{
				letter-spacing: 0.17px;
				font-size: 20rpx;
				color: #999999;
			}
		}
	}
}
.refresh-position{
	height: 52rpx;
	width: 136rpx;
	position: fixed;
	right: 30rpx;
	bottom: 100rpx;
	image{
		width: 100%;
		height: 100%;
	}
}
.tips{
	font-size:28rpx;
	background:#ffffff;
	height:60rpx;
	line-height:60rpx;
	.loadShow{
		background:#ffffff;
		text-align:center;
		display: flex;
		flex-direction: row;
		align-items: center;
		align-self: center;
		justify-content: center;
		icon{
			position:relative;
			top:17rpx; right:5rpx;
		}
	}
}
</style>
<template>
	<scroll-view class="connectionUl" scroll-top="{{scrolltop}}" scroll-y="{{true}}" scroll-x="{{false}}" style="height:{{scrollWrapHeight}}px" bindscrolltolower="scrollLoading">
		<view class="connectionList" wx:for="{{connectionList}}" wx:key="{{index}}" data-id="{{item.id}}" bindtap="toPersonDetail">
			<view class="headImg">
				<image src="{{item.userLogo}}"></image>
			</view>
			<view class="itemDl">
				<view class="connectionName">
					<text>{{item.name}}</text>
					<image wx:if="{{item.bestFlag == 1}}" src="../resources/icons/verify.png" />
	  				<image wx:if="{{item.bestFlag == 2}}" src="../resources/icons/noverify.png" />
	  				<image wx:if="{{item.bestFlag == 3}}" src="../resources/icons/confirm.png" />
	  				<image wx:if="{{item.bestFlag == 4}}" src="../resources/icons/noconfirm.png" />
				</view>
				<view class="connectionDuty">
					<text>{{item.job}} </text>
					<text> {{item.companyName}}</text>
				</view>
				<view class="dataServes">
					<text>{{item.firstCategory}}</text>
					<!-- <text class="distance-style">0.5km</text> --><!-- 与周边的人相距的距离 -->
				</view>
				<view class="connectionCities">
					<text>{{item.city}}</text>
				</view>
			</view>
		</view>
		<view class="tips">
			<view wx:if="{{loadmore}}" class="loadShow">
				<icon type="waiting" size="16" /><text>玩命加载中...</text>
			</view>
			<view wx:else style="text-align:center;"><text>查看更多内容，请前往俺搜APP</text></view>
		</view>
	</scroll-view>
	<view class="refresh-position" bindtap="getLocation">
		<image src="../resources/icons/refreshPositon.png"></image>
	</view>
</template>

<script>
	import wepy from 'wepy';
	import QQMapWX from '../utils/qqmap-wx-jssdk';
	import { api } from '../config';
	export default class roundPerson extends wepy.page {
		config = {
			'navigationBarTitleText': '周边的人',
			'navigationBarTextStyle': '#FFFFFF',
			'navigationBarBackgroundColor': '#0092FF'
		}
		data = {
			loginUId: -1,
			connectionList: [],
			pos: {
				longitude: 0, //经度
				latitude: 0   //纬度
			},
			nearBy: [],
			lastPos: '',
			scrollWrapHeight: 0,
			pageIndex: 1,
			loadmore:true,
			city:''
		}
		events = {

		}
		methods = {
			scrollLoading() {
				if(this.loadmore) {
					this.pageIndex++;
					if(this.pageIndex<6){
						this.getRoundPerson();
					}else{
						this.loadmore = false;
						wx.showModal({
							title: '',
							content: '更多内容请前往按搜app',
							showCancel: true,
							confirmText: '确定',
							confirmColor: '#0092ff',
							success: function (res) {
				        if (res.confirm) {
				          if(wx.getSystemInfoSync().system.toLowerCase().indexOf('andr')!=-1){
									    console.log('android')
											wx.navigateTo({
												  url:'downLoad'
											})
									}else{
										console.log('iso')
										wx.navigateTo({
												url:'downLoad'
										})
									}
				        } else if (res.cancel) {
				          console.log('用户点击取消')
				        }
				      }
						})
					}
				}
			},
			toPersonDetail(e){
				if(!this.loginUId) {
					wx.navigateTo({
						url: 'login?fromPage=personDetail'
					});
					return;
				}
				let memberId=e.currentTarget.dataset.id;
				wx.navigateTo({
					url:'connectionDetail?memberId='+memberId+'&userId='+this.loginUId
				})
			}
		}

		onLoad(e) {
			this.city = e.city;
			this.getLocation();
			this.scrollWrapHeight = wx.getSystemInfoSync().windowHeight;
		}

		onShow() {
			this.pageIndex=1;
			const antsooUserInfo = wepy.getStorageSync("antUserInfo");
			this.loginUId = antsooUserInfo.userId;
	    }

		getLocation() {
			var that=this;
	        var qqmapsdk = new QQMapWX({
	           	key: 'BFYBZ-FF73Q-FNK5G-GUK2J-5DUSO-6QBDJ' // 必填
	        });
			wx.getLocation({
				type: 'wgs84',
				success: function (res) {
					that.pos.latitude = res.latitude;
					that.pos.longitude = res.longitude;
			        qqmapsdk.reverseGeocoder({
		               	location: {
		                 	latitude: res.latitude,
		                 	longitude: res.longitude
		               	},
		               	success: function (addressRes) {
		                   	that.nearBy = addressRes.result.address_component;
		                   	//拼接需要的传参字符串
		                   	that.lastPos=that.pos.longitude+','+that.pos.latitude+'|'+that.nearBy.province+'|'+that.nearBy.city+'|'+that.nearBy.district;
		                    that.getRoundPerson();
		                   	that.$apply();
		               	}
	            	})
			    },
					fail:function(res){
						that.lastPos=that.pos.longitude+','+that.pos.latitude+'|'+''+'|'+that.city+'|'+'';
						that.getRoundPerson();
						that.$apply();
					}
			})
		}

		getRoundPerson() {
			var that = this;
			const pageSize = 20;
			wepy.request({
            	url:api.index.roundPerson.url,
            	method:api.index.roundPerson.method,
	            data:{
	            	firstCategory: "",
	            	job: "",
	            	distance: "10006",
	            	companyModel: "",
	            	pageInfo2: {
								    pIndex: that.pageIndex,
								    pSize: pageSize
								},
  							userId: that.loginUId,
  							position: that.lastPos
	            },
	            success:function(res){
	            	if (res.statusCode == 200) {
	            		console.log(res)
	            		var connectionLists = res.data.body;
	            		const tpages = res.data.page.tCount;
	            		const pages = connectionLists.length/20;
	            		var isInt=tpages/(that.pageIndex*20);
	            		that.loadmore = (pages==1&&isInt!=1) ? true : false;

	            		if(that.pageIndex>1){
	            			that.connectionList = that.connectionList.concat(connectionLists);
	            		}else{
	            			that.connectionList = connectionLists;
	            		}

		                that.$apply();
		                wx.hideLoading();
		                that.$apply();
	            	}
	            }
        	});
		}
	}
</script>
